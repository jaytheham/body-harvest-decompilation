module gameplayInside;

import n64, ram, gameState;

// U RAM GREECE 70270-8ddde0
class GameplayInside : IGameState
{
public:

	// RAM 00070270
	int Start(int a0)
	{
		//	addiu		sp, sp, $ffe8		# 00070270:27bdffe8	
		//	sw		ra, $0014(sp)		# 00070274:afbf0014	
		//	jal		$0007290c		# 00070278:0c01ca43	v FNC_0007290c
		//	sw		a0, $0018(sp)		# 0007027c:afa40018	
		doIndoorLoop();
		//	lw		ra, $0014(sp)		# 00070280:8fbf0014	
		//	addiu		sp, sp, $0018		# 00070284:27bd0018	
		//	or		v0, zero, zero		# 00070288:00001025	
		//	jr		ra			# 0007028c:03e00008	
		//	nop					# 00070290:00000000	
		return 0;
	}

	// RAM GREECE
	void fnc00070294() {
		//N64.ButtonIsNewlyPressed();
		//fnc0007c3c0();
		//fnc0007a370();
	}

	// RAM GREECE
	void fnc000703d0() {
	}

	// RAM GREECE
	int fnc000703ec() {
		return 0;
	}

	// RAM GREECE
	void fnc000703fc() {
	}

	// RAM GREECE
	void fnc0007042c() {
	}

	// RAM GREECE
	void fnc00070448() {
	}

	// RAM GREECE
	void fnc00070464() {
	}

	// RAM GREECE
	void fnc000704d8() {
	}

	// RAM GREECE
	void fnc00070510() {
	}

	// RAM GREECE
	void fnc00070554() {
	}

	// RAM GREECE
	void fnc00070598() {
	}

	// RAM 000705e0
	/// Load house characters/effects? Like fire/candle flames
	void guess_loadCharactersAndEffects() {
		//fnc00070f7c();
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//fnc00070f7c();
		//fnc00070f7c();
		//N64.fnc0001cc6c("Char in the house:%d, x = %d, z = %d\n");
		//guess_allocateTwoCharacterBuffers();
		//N64.fnc0001cc6c("Object in the house:%d, x = %d, z = %d\n");
		//fnc0007774c();
		//fnc0007774c();
		//fnc00074d98();
		//fnc00071304();
	}

	// RAM GREECE
	void fnc00070f7c() {
	}

	// RAM GREECE
	void fnc000710f8() {
	}

	// RAM GREECE
	void fnc00071114() {
	}

	// RAM GREECE
	void fnc00071130() {
	}

	// RAM GREECE
	void fnc0007114c() {
	}

	// RAM GREECE
	void fnc00071184() {
	}

	// RAM GREECE
	void fnc000711a0() {
	}

	// RAM GREECE
	void fnc000711bc() {
	}

	// RAM GREECE
	void fnc000711dc() {
	}

	// RAM GREECE
	void fnc000711fc() {
	}

	// RAM GREECE
	void fnc00071218() {
	}

	// RAM GREECE
	void fnc00071234() {
	}

	// RAM GREECE
	void fnc0007126c() {
	}

	// RAM GREECE
	void fnc00071288() {
	}

	// RAM GREECE
	void fnc000712a8() {
	}

	// RAM GREECE
	void fnc000712c8() {
	}

	// RAM GREECE
	void fnc000712e4() {
	}

	// RAM GREECE
	void fnc00071304() {
		//N64.fnc000153d8();
	}

	// RAM GREECE
	void fnc00071510() {
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc0001cc6c("RED FLASH Light Activated\n");
		//fnc00071304();
		//N64.fnc0000726c();
		//fnc00071304();
		//fnc00071304();
		//fnc00071304();
		//fnc00071304();
	}

	// RAM GREECE
	void fnc000717a8() {
	}

	// RAM GREECE
	void fnc000717b4() {
	}

	// RAM GREECE
	void fnc00071854() {
		//N64.osRecvMesg();
		//N64.fnc00011e14();
		//N64.fnc00004cc8();
		//N64.fnc00004d38();
		//N64.fnc00004f64();
		//fnc00071d94();
		//fnc00071d94();
		//fnc00071d94();
	}

	// RAM GREECE
	void fnc00071d94() {
	}

	// RAM GREECE
	void fnc00071f08() {
		//fnc0008b0ac();
		//N64.fnc000072cc();
		//N64.fnc000073b8();
		//fnc000717b4();
		//guess_loadCharactersAndEffects();
		//fnc00082aa0();
		//fnc0007fbd0();
		//fnc0007c7e0();
		//setUpCollMap();
		//N64.fnc000153d8();
		//fnc0007343c();
	}

	// RAM 00072300
	void setUpCollMap() {
		//N64.fnc0001cc6c("ERROR: setUpCollMap(): Invalid MapEntry %d\n");
	}

	// RAM GREECE
	void fnc0007279c() {
		//N64.fnc000153d8();
		//N64.fnc0001cc6c("Enter Finished\n");
		//N64.fnc0001cc6c("Exit Finished\n");
		//N64.fnc000153d8();
	}

	// RAM 0007290c
	void doIndoorLoop()
	{
		//	lui		t6, $8005		# 0007290c:3c0e8005	t6=$80050000
		//	lw		t6, $2548(t6)		# 00072910:8dce2548	t6=$80052548
		//	addiu		sp, sp, $ffd8		# 00072914:27bdffd8	
		//	addiu		at, zero, $00ff		# 00072918:240100ff	at=$000000ff
		//	sw		ra, $0024(sp)		# 0007291c:afbf0024	
		//	beq		t6, at, $00072e74	# 00072920:11c10154	v __00072e74
		//	sw		s0, $0020(sp)		# 00072924:afb00020	
		//	jal		$0008baa0		# 00072928:0c022ea8	v FNC_0008baa0
		//	nop					# 0007292c:00000000	
		fnc0008baa0();
		//	jal		$00013720		# 00072930:0c004dc8	^ FNC_00013720
		//	nop					# 00072934:00000000	
		N64.fnc00013720();
		//	lui		a0, $8004		# 00072938:3c048004	a0=$80040000
		//	lui		a1, $800a		# 0007293c:3c05800a	a1=$800a0000
		//	addiu		a1, a1, $5720		# 00072940:24a55720	a1=$800a5720
		//	jal		$00011858		# 00072944:0c004616	^ FNC_00011858
		//	lw		a0, $7f90(a0)		# 00072948:8c847f90	a0=$80047f90
		N64.fnc00011858(currentLevel, 0x800a5720);
		//	lui		t7, $8004		# 0007294c:3c0f8004	t7=$80040000
		//	lw		t7, $7f90(t7)		# 00072950:8def7f90	t7=$80047f90
		//	lui		t8, $800f		# 00072954:3c18800f	t8=$800f0000
		//	addiu		t8, t8, $ac90		# 00072958:2718ac90	t8=$800eac90
		//	lui		a0, $800d		# 0007295c:3c04800d	a0=$800d0000
		//	lui		a1, $800e		# 00072960:3c05800e	a1=$800e0000
		//	lui		a2, $800f		# 00072964:3c06800f	a2=$800f0000
		//	lui		a3, $800f		# 00072968:3c07800f	a3=$800f0000
		//	addiu		a3, a3, $ae98		# 0007296c:24e7ae98	a3=$800eae98
		//	addiu		a2, a2, $ad90		# 00072970:24c6ad90	a2=$800ead90
		//	addiu		a1, a1, $7490		# 00072974:24a57490	a1=$800e7490
		//	addiu		a0, a0, $6460		# 00072978:24846460	a0=$800d6460
		//	sw		t8, $0014(sp)		# 0007297c:afb80014	
		//	jal		$000105f0		# 00072980:0c00417c	^ FNC_000105f0
		//	sw		t7, $0010(sp)		# 00072984:afaf0010	
		//	lui		s0, $800e		# 00072988:3c10800e	s0=$800e0000
		//	lui		at, $800f		# 0007298c:3c01800f	at=$800f0000
		//	sw		v0, $ae90(at)		# 00072990:ac22ae90	[800eae90]
		x800eae90 = N64.fnc000105f0(0x800d6460, 0x800e7490, 0x800ead90, 0x800eae98); /// t8 and t7 also args?
		//	addiu		s0, s0, $65a8		# 00072994:261065a8	s0=$800e65a8
		//	addiu		t9, zero, $0001		# 00072998:24190001	t9=$00000001
		//	jal		$00071f08		# 0007299c:0c01c7c2	^ FNC_00071f08
		//	sw		t9, $0000(s0)		# 000729a0:ae190000	[800e65a8]
		x800e65a8 = 1;
		fnc00071f08();
		//	lui		a0, $8004		# 000729a4:3c048004	a0=$80040000
		//	jal		$00011dbc		# 000729a8:0c00476f	^ FNC_00011dbc
		//	lbu		a0, $7f93(a0)		# 000729ac:90847f93	a0=$80047f93
		N64.fnc00011dbc(cast(ubyte)currentLevel);
		//__000729b0:					# 
		do
		{
			//	jal		$0000345c		# 000729b0:0c000d17	^ FNC_0000345c
			//	addiu		a0, zero, $1000		# 000729b4:24041000	a0=$00001000
			N64.fnc0000345c(N64.Buttons.START);
			//	jal		$0000345c		# 000729b8:0c000d17	^ FNC_0000345c
			//	ori		a0, zero, $8000		# 000729bc:34048000	a0=$00008000
			N64.fnc0000345c(N64.Buttons.A);
			//	lui		t0, $8004		# 000729c0:3c088004	t0=$80040000
			//	lh		t0, $771c(t0)		# 000729c4:8508771c	t0=$8004771c
			//	addiu		at, zero, $ffff		# 000729c8:2401ffff	at=$ffffffff
			//	bne		t0, at, $000729ec	# 000729cc:15010007	v __000729ec
			//	nop					# 000729d0:00000000	
			if (x8004771c == -1)
			{
				//	jal		$0000345c		# 000729d4:0c000d17	^ FNC_0000345c
				//	addiu		a0, zero, $0800		# 000729d8:24040800	a0=$00000800
				N64.fnc0000345c(N64.Buttons.D_UP);
				//	jal		$0000345c		# 000729dc:0c000d17	^ FNC_0000345c
				//	addiu		a0, zero, $0200		# 000729e0:24040200	a0=$00000200
				N64.fnc0000345c(N64.Buttons.D_LEFT);
				//	jal		$0000345c		# 000729e4:0c000d17	^ FNC_0000345c
				//	addiu		a0, zero, $0100		# 000729e8:24040100	a0=$00000100
				N64.fnc0000345c(N64.Buttons.D_RIGHT);
			}
			//__000729ec:					# 
			//	lui		at, $800e		# 000729ec:3c01800e	at=$800e0000
			//	sw		zero, $6698(at)		# 000729f0:ac206698	[800e6698]
			x800e6698 = 0;
			//	lui		at, $800e		# 000729f4:3c01800e	at=$800e0000
			//	jal		$00071854		# 000729f8:0c01c615	^ FNC_00071854
			//	sw		zero, $669c(at)		# 000729fc:ac20669c	[800e669c]
			x800e669c = 0;
			fnc00071854();
			//	lw		v0, $0000(s0)		# 00072a00:8e020000	v0=$800e65a8
			//	andi		t1, v0, $4002		# 00072a04:30494002	
			//	bnel		t1, zero, $00072a20	# 00072a08:55200005	v __00072a20
			//	andi		t2, v0, $4000		# 00072a0c:304a4000	
			if ((x800e65a8 & 0x4002) == 0)
			{
				//	jal		$00072fb4		# 00072a10:0c01cbed	v FNC_00072fb4
				//	nop					# 00072a14:00000000	
				fnc00072fb4();
				//	lw		v0, $0000(s0)		# 00072a18:8e020000	v0=$800e65a8
				//	andi		t2, v0, $4000		# 00072a1c:304a4000	
			}
			//__00072a20:					# 
			//	beq		t2, zero, $00072a50	# 00072a20:1140000b	v __00072a50
			//	nop					# 00072a24:00000000	
			if ((x800e65a8 & 0x4000) != 0)
			{
				//	jal		$0007c8fc		# 00072a28:0c01f23f	v FNC_0007c8fc
				//	nop					# 00072a2c:00000000	
				fnc0007c8fc();
				//	jal		$00077b94		# 00072a30:0c01dee5	v FNC_00077b94
				//	nop					# 00072a34:00000000	
				fnc00077b94();
				//	jal		$000784b8		# 00072a38:0c01e12e	v FNC_000784b8
				//	nop					# 00072a3c:00000000	
				fnc000784b8();
				//	jal		$00071510		# 00072a40:0c01c544	^ FNC_00071510
				//	nop					# 00072a44:00000000	
				fnc00071510();
				//	jal		$0008b474		# 00072a48:0c022d1d	v FNC_0008b474
				//	nop					# 00072a4c:00000000	
				fnc0008b474();
			}
			//__00072a50:					# 
			//	jal		$0007fc74		# 00072a50:0c01ff1d	v FNC_0007fc74
			//	nop					# 00072a54:00000000
			fnc0007fc74();	
			//	jal		$0007568c		# 00072a58:0c01d5a3	v FNC_0007568c
			//	nop					# 00072a5c:00000000	
			fnc0007568c();
			//	jal		$0007c93c		# 00072a60:0c01f24f	v FNC_0007c93c
			//	nop					# 00072a64:00000000	
			fnc0007c93c();
			//	jal		$00074ff0		# 00072a68:0c01d3fc	v FNC_00074ff0
			//	nop					# 00072a6c:00000000	
			fnc00074ff0();
			//	jal		$0008b1a8		# 00072a70:0c022c6a	v FNC_0008b1a8
			//	nop					# 00072a74:00000000	
			fnc0008b1a8();
			//	jal		$00082b50		# 00072a78:0c020ad4	v FNC_00082b50
			//	nop					# 00072a7c:00000000	
			fnc00082b50();
			//	jal		$0008d900		# 00072a80:0c023640	v FNC_0008d900
			//	nop					# 00072a84:00000000	
			fnc0008d900();
			//	jal		$0000b044		# 00072a88:0c002c11	^ FNC_0000b044
			//	nop					# 00072a8c:00000000	
			N64.fnc0000b044();
			//	jal		$00005b84		# 00072a90:0c0016e1	^ FNC_00005b84
			//	nop					# 00072a94:00000000	
			N64.fnc00005b84();
			//	jal		$0000505c		# 00072a98:0c001417	^ FNC_0000505c
			//	nop					# 00072a9c:00000000	
			N64.fnc0000505c();
			//	lw		v0, $0000(s0)		# 00072aa0:8e020000	
			//	lui		t4, $800e		# 00072aa4:3c0c800e	t4=$800e0000
			//	lui		t6, $800e		# 00072aa8:3c0e800e	t6=$800e0000
			//	andi		t3, v0, $0002		# 00072aac:304b0002	
			//	bnel		t3, zero, $00072acc	# 00072ab0:55600006	v __00072acc
			//	addiu		at, zero, $0001		# 00072ab4:24010001	at=$00000001
			if ((x800e65a8 & 2) == 0)
			{
				//	lw		t4, $65ac(t4)		# 00072ab8:8d8c65ac	t4=$800e65ac
				//	lui		at, $800e		# 00072abc:3c01800e	at=$800e0000
				//	addiu		t5, t4, $0001		# 00072ac0:258d0001	t5=$000000a9
				//	sw		t5, $65ac(at)		# 00072ac4:ac2d65ac	[800e65ac]
				x800e65ac++;
				//	addiu		at, zero, $0001		# 00072ac8:24010001	at=$00000001
			}
			//__00072acc:					# 
			//	bne		v0, at, $00072b30	# 00072acc:14410018	v __00072b30
			//	nop					# 00072ad0:00000000	
			//	lw		t6, $66a4(t6)		# 00072ad4:8dce66a4	t6=$800e66a4
			//	addiu		at, zero, $0005		# 00072ad8:24010005	at=$00000005
			//	lui		v0, $8005		# 00072adc:3c028005	v0=$80050000
			//	bne		t6, at, $00072b30	# 00072ae0:15c10013	v __00072b30
			//	nop					# 00072ae4:00000000	
			if (x800e65a8 == 1 && x800e66a4 == 5)
			{
				/// TODO pointer stuff
				//	lw		v0, $2b34(v0)		# 00072ae8:8c422b34	v0=$80052b34
				//	lui		v1, $8025		# 00072aec:3c038025	v1=$80250000
				//	lh		t7, $001c(v0)		# 00072af0:844f001c	t7=$8004dcec
				//	addiu		t8, t7, $0002		# 00072af4:25f80002	
				//	sh		t8, $001c(v0)		# 00072af8:a458001c	[8004dcec]
				//	lui		v0, $8005		# 00072afc:3c028005	v0=$80050000
				//	lw		v0, $2b34(v0)		# 00072b00:8c422b34	v0=$80052b34
				//	lbu		t9, $001a(v0)		# 00072b04:9059001a	t9=$8004dcea
				//	lh		t1, $001c(v0)		# 00072b08:8449001c	t1=$8004dcec
				//	sll		t0, t9, 3		# 00072b0c:001940c0	
				//	subu		t0, t0, t9		# 00072b10:01194023	
				//	sll		t0, t0, 4		# 00072b14:00084100	
				//	addu		v1, v1, t0		# 00072b18:00681821	
				//	lhu		v1, $7a3a(v1)		# 00072b1c:94637a3a	
				//	slt		at, v1, t1		# 00072b20:0069082a	
				//	beq		at, zero, $00072b30	# 00072b24:10200002	v __00072b30
				//	nop					# 00072b28:00000000	
				//	sh		v1, $001c(v0)		# 00072b2c:a443001c	[8004dcec]
			}
			//__00072b30:					# 
			//	lui		v0, $800e		# 00072b30:3c02800e	v0=$800e0000
			//	lw		v0, $6690(v0)		# 00072b34:8c426690	v0=$800e6690
			int v0 = x800e6690;
			//	bne		v0, zero, $00072b70	# 00072b38:1440000d	v __00072b70
			//	nop					# 00072b3c:00000000	
			//	lw		t2, $0000(s0)		# 00072b40:8e0a0000	
			//	or		a0, zero, zero		# 00072b44:00002025	
			//	or		a1, zero, zero		# 00072b48:00002825	
			//	andi		t3, t2, $0300		# 00072b4c:314b0300	
			//	beq		t3, zero, $00072b70	# 00072b50:11600007	v __00072b70
			if (v0 == 0 && (x800e65a8 & 0x300) != 0)
			{
				//	or		a2, zero, zero		# 00072b54:00003025	
				//	jal		$00005aec		# 00072b58:0c0016bb	^ FNC_00005aec
				//	addiu		a3, zero, $00c8		# 00072b5c:240700c8	a3=$000000c8
				N64.fnc00005aec(0, 0, 0, 0xc8);
				//	addiu		t4, zero, $0001		# 00072b60:240c0001	t4=$00000001
				//	lui		at, $800e		# 00072b64:3c01800e	at=$800e0000
				//	sw		t4, $6690(at)		# 00072b68:ac2c6690	[800e6690]
				x800e6690 = 1;
				//	addiu		v0, zero, $0001		# 00072b6c:24020001	v0=$00000001
				v0 = 1;
			}
			//__00072b70:					# 
			//	beq		v0, zero, $00072b88	# 00072b70:10400005	v __00072b88
			//	nop					# 00072b74:00000000	
			if (v0 != 0)
			{
				//	jal		$00005b30		# 00072b78:0c0016cc	^ FNC_00005b30
				//	nop					# 00072b7c:00000000	
				//	lui		at, $800e		# 00072b80:3c01800e	at=$800e0000
				//	sw		v0, $6694(at)		# 00072b84:ac226694	[800e6694]
				x800e6694 = N64.fnc00005b30();
			}
			//__00072b88:					# 
			//	lui		v1, $800e		# 00072b88:3c03800e	v1=$800e0000
			//	lw		v1, $6694(v1)		# 00072b8c:8c636694	v1=$800e6694
			//	beq		v1, zero, $00072c48	# 00072b90:1060002d	v __00072c48
			//	nop					# 00072b94:00000000	
			//	lw		t5, $0000(s0)		# 00072b98:8e0d0000	
			//	lui		v0, $800e		# 00072b9c:3c02800e	v0=$800e0000
			//	lui		t9, $8004		# 00072ba0:3c198004	t9=$80040000
			//	andi		t6, t5, $0200		# 00072ba4:31ae0200	
			//	beq		t6, zero, $00072c48	# 00072ba8:11c00027	v __00072c48
			//	nop					# 00072bac:00000000	
			if (x800e6694 != 0 && (x800e65a8 & 0x500) != 0)
			{
				//	lw		v0, $65d4(v0)		# 00072bb0:8c4265d4	v0=$800e65d4
				//	addiu		t9, t9, $7f40		# 00072bb4:27397f40	t9=$80047f40
				//	addiu		t2, zero, $0001		# 00072bb8:240a0001	t2=$00000001
				//	bgez		v0, $00072bcc		# 00072bbc:04410003	v __00072bcc
				//	sra		t7, v0, 5		# 00072bc0:00027943	
				int t7 = x800e65d4 >>> 5;
				if (x800e65d4 < 0)
				{
					//	addiu		at, v0, $001f		# 00072bc4:2441001f	at=$0000002a
					//	sra		t7, at, 5		# 00072bc8:00017943	
					t7 = (x800e65d4 + 0x1f) >>> 5;
				}
				//__00072bcc:					# 
				//	sll		t8, t7, 2		# 00072bcc:000fc080	t8=$00000004
				t7 = t7 << 2;
				//	addu		v1, t8, t9		# 00072bd0:03191821	v1=$80047f44
				//	lw		t0, $0000(v1)		# 00072bd4:8c680000	t0=$80047f44
				int t0 = GetWord(0x80047f40 + t7);
				//	bgez		v0, $00072bec		# 00072bd8:04410004	v __00072bec
				//	andi		t1, v0, $001f		# 00072bdc:3049001f	
				int t1 = x800e65d4 & 0x1f;
				//	beq		t1, zero, $00072bec	# 00072be0:11200002	v __00072bec
				//	nop					# 00072be4:00000000	
				if (x800e65d4 < 0 && t1 != 0)
				{
					//	addiu		t1, t1, $ffe0		# 00072be8:2529ffe0	t1=$ffffffeb
					t1 += 0xffe0; /// Is this a negative value? -0x20
				}
				//__00072bec:					# 
				//	sllv		t3, t2, t1		# 00072bec:012a5804	t3=$00000800
				//	or		t4, t0, t3		# 00072bf0:010b6025	
				//	jal		$0007313c		# 00072bf4:0c01cc4f	v FNC_0007313c
				//	sw		t4, $0000(v1)		# 00072bf8:ac6c0000	[80047f44]
				StoreWord(t0 | (1 << t1), 0x80047f40 + t7);
				fnc0007313c();
				//	jal		$0007c8bc		# 00072bfc:0c01f22f	v FNC_0007c8bc
				//	nop					# 00072c00:00000000	
				fnc0007c8bc();
				//	jal		$0007f724		# 00072c04:0c01fdc9	v FNC_0007f724
				//	nop					# 00072c08:00000000	
				fnc0007f724();
				//	lui		t5, $800e		# 00072c0c:3c0d800e	t5=$800e0000
				//	lbu		t5, $65ed(t5)		# 00072c10:91ad65ed	t5=$800e65ed
				//	lui		at, $8005		# 00072c14:3c018005	at=$80050000
				//	jal		$000736c4		# 00072c18:0c01cdb1	v FNC_000736c4
				//	sw		t5, $2548(at)		# 00072c1c:ac2d2548	[80052548]
				indoorRoomLayoutToLoadId = x800e65ed;
				fnc000736c4();
				//	jal		$00073058		# 00072c20:0c01cc16	v FNC_00073058
				//	nop					# 00072c24:00000000	
				fnc00073058();
				//	jal		$00071f08		# 00072c28:0c01c7c2	^ FNC_00071f08
				//	nop					# 00072c2c:00000000	
				fnc00071f08();
				//	jal		$000056a8		# 00072c30:0c0015aa	^ FNC_000056a8
				//	nop					# 00072c34:00000000	
				N64.fnc000056a8();
				//	jal		$000056a8		# 00072c38:0c0015aa	^ FNC_000056a8
				//	nop					# 00072c3c:00000000	
				N64.fnc000056a8();
				//	lui		v1, $800e		# 00072c40:3c03800e	v1=$800e0000
				//	lw		v1, $6694(v1)		# 00072c44:8c636694	v1=$800e6694
			}
			//__00072c48:					# 
			//	lui		t6, $8005		# 00072c48:3c0e8005	t6=$80050000
			//	lw		t6, $2ad0(t6)		# 00072c4c:8dce2ad0	t6=$80052ad0
			//	lui		v0, $8005		# 00072c50:3c028005	v0=$80050000
			//	bne		t6, zero, $00072c84	# 00072c54:15c0000b	v __00072c84
			//	nop					# 00072c58:00000000	
			if (x80052ad0 == 0)
			{
				//	lw		v0, $2ad4(v0)		# 00072c5c:8c422ad4	v0=$80052ad4
				//	lui		at, $8005		# 00072c60:3c018005	at=$80050000
				//	beq		v0, zero, $00072c74	# 00072c64:10400003	v __00072c74
				//	addiu		t7, v0, $ffff		# 00072c68:244fffff	t7=$0000003b
				if (x80052ad4 != 0)
				{
					//	beq		zero, zero, $00072c84	# 00072c6c:10000005	v __00072c84
					//	sw		t7, $2ad4(at)		# 00072c70:ac2f2ad4	[80052ad4]
					x80052ad4--;
				}
				else
				{
					//__00072c74:					# 
					//	lw		t8, $0000(s0)		# 00072c74:8e180000	
					//	lui		at, $0002		# 00072c78:3c010002	at=$00020000
					//	or		t9, t8, at		# 00072c7c:0301c825	
					//	sw		t9, $0000(s0)		# 00072c80:ae190000	
					x800e65a8 |= 2;
				}
			}
			//__00072c84:					# 
			//	bne		v1, zero, $00072ca4	# 00072c84:14600007	v __00072ca4
			//	nop					# 00072c88:00000000	
			//	lw		t2, $0000(s0)		# 00072c8c:8e0a0000	
			//	lui		at, $000a		# 00072c90:3c01000a	at=$000a0000
			//	ori		at, at, $2000		# 00072c94:34212000	at=$000a2000
			//	and		t1, t2, at		# 00072c98:01414824	
			//	beq		t1, zero, $000729b0	# 00072c9c:1120ff44	^ __000729b0
			//	nop					# 00072ca0:00000000	
		} while (x800e6694 == 0 && (x800e65a8 & 0xa2000) == 0);
		//__00072ca4:					# 
		/// Leaving indoor mode
		/// First while condition is cause when exiting via door or cinema
		/// Second while condition is cause when choose menu option:
		/// 2000 = Map
		/// 20000 = Quit
		/// 80000 = Inventory
		//	lui		v0, $800e		# 00072ca4:3c02800e	v0=$800e0000
		//	lw		v0, $65d4(v0)		# 00072ca8:8c4265d4	v0=$800e65d4
		//	lui		t4, $8004		# 00072cac:3c0c8004	t4=$80040000
		//	addiu		t4, t4, $7f40		# 00072cb0:258c7f40	t4=$80047f40
		//	bgez		v0, $00072cc4		# 00072cb4:04410003	v __00072cc4
		//	sra		t0, v0, 5		# 00072cb8:00024143	
		int t0 = x800e65d4 >>> 5;
		if (x800e65d4 < 0)
		{
			//	addiu		at, v0, $001f		# 00072cbc:2441001f	at=$0000002a
			//	sra		t0, at, 5		# 00072cc0:00014143	
			t0 = (t0 + 0x1f) >>> 5;
		}
		//__00072cc4:					# 
		//	sll		t3, t0, 2		# 00072cc4:00085880	t3=$00000004
		//	addu		v1, t3, t4		# 00072cc8:016c1821	v1=$80047f44
		//	lw		t5, $0000(v1)		# 00072ccc:8c6d0000	t5=$80047f44
		//	addiu		t7, zero, $0001		# 00072cd0:240f0001	t7=$00000001
		//	bgez		v0, $00072ce8		# 00072cd4:04410004	v __00072ce8
		//	andi		t6, v0, $001f		# 00072cd8:304e001f	
		int t6 = x800e65d4 & 0x1f;
		//	beq		t6, zero, $00072ce8	# 00072cdc:11c00002	v __00072ce8
		//	nop					# 00072ce0:00000000	
		if (x800e65d4 < 0 && t6 != 0)
		{
			//	addiu		t6, t6, $ffe0		# 00072ce4:25ceffe0	t6=$ffffffeb
			t6 -= 0x20;
		}
		//__00072ce8:					# 
		//	sllv		t8, t7, t6		# 00072ce8:01cfc004	t8=$00000800
		//	or		t9, t5, t8		# 00072cec:01b8c825	
		//	jal		$000736c4		# 00072cf0:0c01cdb1	v FNC_000736c4
		//	sw		t9, $0000(v1)		# 00072cf4:ac790000	[80047f44]
		/// Pointer store based off 80047f40
		fnc000736c4();
		//	jal		$0007313c		# 00072cf8:0c01cc4f	v FNC_0007313c
		//	nop					# 00072cfc:00000000	
		fnc0007313c();
		//	lui		t2, $800e		# 00072d00:3c0a800e	t2=$800e0000
		//	lw		t2, $65b8(t2)		# 00072d04:8d4a65b8	t2=$800e65b8
		//	lui		at, $8005		# 00072d08:3c018005	at=$80050000
		//	sw		zero, $2550(at)		# 00072d0c:ac202550	[80052550]
		x80052550 = 0;
		//	beql		t2, zero, $00072d30	# 00072d10:51400007	v __00072d30
		//	lw		t0, $0000(s0)		# 00072d14:8e080000	
		if (x800e65b8 != 0)
		{
			//	jal		$0007356c		# 00072d18:0c01cd5b	v FNC_0007356c
			//	nop					# 00072d1c:00000000	
			fnc0007356c();
			//	addiu		t1, zero, $0001		# 00072d20:24090001	t1=$00000001
			//	lui		at, $8005		# 00072d24:3c018005	at=$80050000
			//	sw		t1, $2550(at)		# 00072d28:ac292550	[80052550]
			x80052550 = 1;
			//	lw		t0, $0000(s0)		# 00072d2c:8e080000	
		}
		//__00072d30:					# 
		//	lui		at, $000a		# 00072d30:3c01000a	at=$000a0000
		//	ori		at, at, $2000		# 00072d34:34212000	at=$000a2000
		//	and		t3, t0, at		# 00072d38:01015824	
		//	bne		t3, zero, $00072d6c	# 00072d3c:1560000b	v __00072d6c
		//	nop					# 00072d40:00000000	
		if ((x800e65a8 & 0xa2000) == 0)
		{
			//	jal		$000056a8		# 00072d44:0c0015aa	^ FNC_000056a8
			//	nop					# 00072d48:00000000	
			N64.fnc000056a8();
			//	jal		$000056a8		# 00072d4c:0c0015aa	^ FNC_000056a8
			//	nop					# 00072d50:00000000	
			N64.fnc000056a8();
			//	jal		$000056a8		# 00072d54:0c0015aa	^ FNC_000056a8
			//	nop					# 00072d58:00000000	
			N64.fnc000056a8();
			//	jal		$000056a8		# 00072d5c:0c0015aa	^ FNC_000056a8
			//	nop					# 00072d60:00000000	
			N64.fnc000056a8();
			//	beq		zero, zero, $00072d9c	# 00072d64:1000000d	v __00072d9c
			//	nop					# 00072d68:00000000	
		}
		else
		{
			//__00072d6c:					# 
			//	jal		$000050c4		# 00072d6c:0c001431	^ FNC_000050c4
			//	nop					# 00072d70:00000000	
			N64.fnc000050c4();
			//	jal		$0000505c		# 00072d74:0c001417	^ FNC_0000505c
			//	nop					# 00072d78:00000000	
			N64.fnc0000505c();
			//	jal		$000050c4		# 00072d7c:0c001431	^ FNC_000050c4
			//	nop					# 00072d80:00000000	
			N64.fnc000050c4();
			//	jal		$0000505c		# 00072d84:0c001417	^ FNC_0000505c
			//	nop					# 00072d88:00000000	
			N64.fnc0000505c();
			//	jal		$000050c4		# 00072d8c:0c001431	^ FNC_000050c4
			//	nop					# 00072d90:00000000	
			N64.fnc000050c4();
			//	jal		$0000505c		# 00072d94:0c001417	^ FNC_0000505c
			//	nop					# 00072d98:00000000	
			N64.fnc0000505c();
		}
		//__00072d9c:					# 
		//	jal		$0007c8bc		# 00072d9c:0c01f22f	v FNC_0007c8bc
		//	nop					# 00072da0:00000000	
		fnc0007c8bc();
		//	jal		$0007f724		# 00072da4:0c01fdc9	v FNC_0007f724
		//	nop					# 00072da8:00000000	
		fnc0007f724();
		//	jal		$000136f0		# 00072dac:0c004dbc	^ FNC_000136f0
		//	nop					# 00072db0:00000000	
		N64.fnc000136f0();
		//	lw		v0, $0000(s0)		# 00072db4:8e020000	
		//	addiu		t7, zero, $0001		# 00072db8:240f0001	t7=$00000001
		//	lui		at, $8005		# 00072dbc:3c018005	at=$80050000
		//	andi		t4, v0, $2000		# 00072dc0:304c2000	
		//	beq		t4, zero, $00072ddc	# 00072dc4:11800005	v __00072ddc
		//	sll		t6, v0, 12		# 00072dc8:00027300	
		if ((x800e65a8 & 0x2000) != 0)
		{
			//	sw		t7, $2550(at)		# 00072dcc:ac2f2550	[80052550]
			x80052550 = 1;
			//	lui		at, $8005		# 00072dd0:3c018005	at=$80050000
			//	beq		zero, zero, $00072e74	# 00072dd4:10000027	v __00072e74
			//	sw		zero, $2adc(at)		# 00072dd8:ac202adc	[80052adc]
			gameplayMode = 0;
		}
		else
		{
			//__00072ddc:					# 
			//	bgez		t6, $00072e00		# 00072ddc:05c10008	v __00072e00
			//	andi		t9, v0, $4000		# 00072de0:30594000	
			if ((x800e65a8 << 12) < 0)
			{
				//	addiu		t5, zero, $0001		# 00072de4:240d0001	t5=$00000001
				//	lui		at, $8005		# 00072de8:3c018005	at=$80050000
				//	sw		t5, $2550(at)		# 00072dec:ac2d2550	[80052550]
				x80052550 = 1;
				//	lui		at, $8005		# 00072df0:3c018005	at=$80050000
				//	addiu		t8, zero, $0010		# 00072df4:24180010	t8=$00000010
				//	beq		zero, zero, $00072e74	# 00072df8:1000001e	v __00072e74
				//	sw		t8, $2adc(at)		# 00072dfc:ac382adc	[80052adc]
				gameplayMode = 0x10;
			}
			//__00072e00:					# 
			else if ((x800e65a8 & 0x4000) != 0)
			{
				//	beq		t9, zero, $00072e18	# 00072e00:13200005	v __00072e18
				//	sll		t1, v0, 14		# 00072e04:00024b80	
				//	addiu		t2, zero, $000c		# 00072e08:240a000c	t2=$0000000c
				//	lui		at, $8005		# 00072e0c:3c018005	at=$80050000
				//	beq		zero, zero, $00072e74	# 00072e10:10000018	v __00072e74
				//	sw		t2, $2adc(at)		# 00072e14:ac2a2adc	[80052adc]
				gameplayMode = 0xc;
			}
			//__00072e18:					# 
			else if ((x800e65a8 << 14) < 0)
			{
				//	bgez		t1, $00072e30		# 00072e18:05210005	v __00072e30
				//	lui		t3, $8004		# 00072e1c:3c0b8004	t3=$80040000
				//	addiu		t0, zero, $000c		# 00072e20:2408000c	t0=$0000000c
				//	lui		at, $8005		# 00072e24:3c018005	at=$80050000
				//	beq		zero, zero, $00072e74	# 00072e28:10000012	v __00072e74
				//	sw		t0, $2adc(at)		# 00072e2c:ac282adc	[80052adc]
				gameplayMode = 0xc;
			}
			else
			{
				//__00072e30:					# 
				//	lw		t3, $7f90(t3)		# 00072e30:8d6b7f90	t3=$80047f90
				//	addiu		at, zero, $0004		# 00072e34:24010004	at=$00000004
				//	addiu		a0, zero, $0000		# 00072e38:24040000	
				//	bnel		t3, at, $00072e60	# 00072e3c:55610008	v __00072e60
				//	addiu		t4, zero, $0001		# 00072e40:240c0001	t4=$00000001
				if (currentLevel == 4)
				{
					//	jal		$0000726c		# 00072e44:0c001c9b	^ FNC_0000726c
					//	addiu		a1, zero, $0001		# 00072e48:24050001	a1=$00000001
					N64.fnc0000726c(0, 1);
					//	beq		v0, zero, $00072e5c	# 00072e4c:10400003	v __00072e5c
					//	addiu		a0, zero, $0000		# 00072e50:24040000	
					if (x800e65a8 != 0)
					{
						//	jal		$000073b8		# 00072e54:0c001cee	^ FNC_000073b8
						//	addiu		a1, zero, $0001		# 00072e58:24050001	a1=$00000001
						N64.fnc000073b8(0, 1);
					}
					//__00072e5c:					# 
					//	addiu		t4, zero, $0001		# 00072e5c:240c0001	t4=$00000001
				}
				//__00072e60:					# 
				//	lui		at, $8005		# 00072e60:3c018005	at=$80050000
				//	sw		t4, $2adc(at)		# 00072e64:ac2c2adc	[80052adc]
				x80052adc = 1;
				//	lui		at, $8007		# 00072e68:3c018007	at=$80070000
				//	addiu		t7, zero, $0007		# 00072e6c:240f0007	t7=$00000007
				//	sw		t7, $8080(at)		# 00072e70:ac2f8080	[80068080]
				x80068080 = 7;
			}
		}
		//__00072e74:					# 
		//	lw		ra, $0024(sp)		# 00072e74:8fbf0024	
		//	lw		s0, $0020(sp)		# 00072e78:8fb00020	
		//	addiu		sp, sp, $0028		# 00072e7c:27bd0028	
		//	jr		ra			# 00072e80:03e00008	
		//	nop					# 00072e84:00000000	
	}

	// RAM GREECE
	void fnc00072e88() {
	}

	// RAM GREECE
	void fnc00072f04() {
	}

	// RAM GREECE
	void fnc00072f54() {
	}

	// RAM GREECE
	void fnc00072fa0() {
	}

	// RAM GREECE
	void fnc00072fa8() {
	}

	// RAM GREECE
	void fnc00072fb4() {
		//N64.fnc00008674();
		//fnc0007279c();
		//fnc0007c8fc();
		//fnc00072e88();
		//fnc0007f778();
		//fnc0007f878();
		//fnc00078d68();
		//fnc00077b94();
		//fnc000784b8();
		//fnc00073200();
		//fnc00071510();
		//fnc00079330();
		//fnc0008b474();
	}

	// RAM GREECE
	void fnc00073058() {
		//fnc00077a5c();
	}

	// RAM GREECE
	void fnc0007313c() {
	}

	// RAM GREECE
	void fnc00073200() {
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
	}

	// RAM GREECE
	void fnc00073434() {
	}

	// RAM GREECE
	void fnc0007343c() {
	}

	// RAM GREECE
	void fnc0007356c() {
	}

	// RAM GREECE
	void fnc000736c4() {
	}

	// RAM GREECE
	void fnc00073714() {
	}

	// RAM GREECE
	void fnc00073a48() {
	}

	// RAM GREECE
	void fnc00073a50()
	{
		//	lui		at, $8009		# 00073a50:3c018009	at=$80090000
		//	lwc1		$f4, $ddf4(at)		# 00073a54:c424ddf4	[8008ddf4]
		//	lui		at, $800e		# 00073a58:3c01800e	at=$800e0000
		//	lwc1		$f6, $659c(at)		# 00073a5c:c426659c	[800e659c]
		//	lui		at, $8009		# 00073a60:3c018009	at=$80090000
		//	lwc1		$f16, $ddfc(at)		# 00073a64:c430ddfc	[8008ddfc]
		//	sub.s		$f8, $f4, $f6		# 00073a68:46062201	
		//	lui		at, $800e		# 00073a6c:3c01800e	at=$800e0000
		//	lwc1		$f18, $65a4(at)		# 00073a70:c43265a4	[800e65a4]
		//	addiu		sp, sp, $ffd8		# 00073a74:27bdffd8	
		//	(cop1_s)	$0200428d		# 00073a78:4600428d	
		//	sw		ra, $0024(sp)		# 00073a7c:afbf0024	
		//	sub.s		$f4, $f16, $f18		# 00073a80:46128101	
		//	mfc1		v0, $f10		# 00073a84:44025000	
		//	nop					# 00073a88:00000000	
		//	sll		t7, v0, 16		# 00073a8c:00027c00	
		//	sra		t8, t7, 16		# 00073a90:000fc403	
		//	multu		t8, t8			# 00073a94:03180019	
		//	(cop1_s)	$0200218d		# 00073a98:4600218d	
		//	mfc1		v1, $f6			# 00073a9c:44033000	
		//	nop					# 00073aa0:00000000	
		//	sll		t6, v1, 16		# 00073aa4:00037400	
		//	sra		t7, t6, 16		# 00073aa8:000e7c03	
		//	mflo		t8			# 00073aac:0000c012	
		//	nop					# 00073ab0:00000000	
		//	nop					# 00073ab4:00000000	
		//	multu		t7, t7			# 00073ab8:01ef0019	
		//	mflo		t9			# 00073abc:0000c812	
		//	addu		t6, t8, t9		# 00073ac0:03197021	
		//	mtc1		t6, $f8			# 00073ac4:448e4000	
		//	jal		$0001d940		# 00073ac8:0c007650	^ FNC_0001d940
		//	cvt.s.w		$f12, $f8		# 00073acc:46804320	
		N64.sqrtf();
		//	(cop1_s)	$0200028d		# 00073ad0:4600028d	
		//	lui		at, $8009		# 00073ad4:3c018009	at=$80090000
		//	lwc1		$f18, $ddf8(at)		# 00073ad8:c432ddf8	[8008ddf8]
		//	lui		at, $800e		# 00073adc:3c01800e	at=$800e0000
		//	mfc1		t8, $f10		# 00073ae0:44185000	
		//	lwc1		$f4, $65a0(at)		# 00073ae4:c42465a0	[800e65a0]
		//	sll		t9, t8, 16		# 00073ae8:0018cc00	
		//	sra		t6, t9, 16		# 00073aec:00197403	
		//	mtc1		t6, $f16		# 00073af0:448e8000	
		//	sub.s		$f14, $f18, $f4		# 00073af4:46049381	
		//	jal		$00003824		# 00073af8:0c000e09	^ FNC_00003824
		//	cvt.s.w		$f12, $f16		# 00073afc:46808320	
		N64.fnc00003824();
		//	lui		v1, $8004		# 00073b00:3c038004	v1=$80040000
		//	lw		v1, $7f90(v1)		# 00073b04:8c637f90	v1=$80047f90
		//	addiu		at, zero, $0001		# 00073b08:24010001	at=$00000001
		//	mtc1		zero, $f0		# 00073b0c:44800000	
		//	beq		v1, at, $00073b24	# 00073b10:10610004	v __00073b24
		//	addiu		t9, zero, $0032		# 00073b14:24190032	t9=$00000032
		//	addiu		at, zero, $0003		# 00073b18:24010003	at=$00000003
		//	bne		v1, at, $00073ec0	# 00073b1c:146100e8	v __00073ec0
		//	addiu		t7, zero, $0032		# 00073b20:240f0032	t7=$00000032
		//__00073b24:					# 
		//	addiu		at, zero, $0024		# 00073b24:24010024	at=$00000024
		//	div		v0, at			# 00073b28:0041001a	
		//	lui		v1, $8006		# 00073b2c:3c038006	v1=$80060000
		//	addiu		v1, v1, $bb34		# 00073b30:2463bb34	v1=$8005bb34
		//	lw		t7, $0000(v1)		# 00073b34:8c6f0000	t7=$8005bb34
		//	mflo		t8			# 00073b38:0000c012	
		//	subu		a2, t9, t8		# 00073b3c:03383023	
		//	sh		zero, $0000(t7)		# 00073b40:a5e00000	[801de230]
		//	lw		t9, $0000(v1)		# 00073b44:8c790000	t9=$8005bb34
		//	addiu		a1, zero, $fffb		# 00073b48:2405fffb	a1=$fffffffb
		//	addiu		t4, zero, $0029		# 00073b4c:240c0029	t4=$00000029
		//	sh		a2, $0002(t9)		# 00073b50:a7260002	[801de232]
		//	lw		t8, $0000(v1)		# 00073b54:8c780000	t8=$8005bb34
		//	addiu		t5, zero, $0023		# 00073b58:240d0023	t5=$00000023
		//	addiu		a0, zero, $00ff		# 00073b5c:240400ff	a0=$000000ff
		//	sh		a1, $0004(t8)		# 00073b60:a7050004	[801de234]
		//	lw		t6, $0000(v1)		# 00073b64:8c6e0000	t6=$8005bb34
		//	addiu		a3, zero, $0140		# 00073b68:24070140	a3=$00000140
		//	addiu		t0, a2, $003c		# 00073b6c:24c8003c	
		//	sh		zero, $0006(t6)		# 00073b70:a5c00006	[801de236]
		//	lw		t7, $0000(v1)		# 00073b74:8c6f0000	t7=$8005bb34
		//	addiu		ra, zero, $00a0		# 00073b78:241f00a0	ra=$000000a0
		//	addiu		t1, a2, $0064		# 00073b7c:24c90064	
		//	sh		zero, $0008(t7)		# 00073b80:a5e00008	[801de238]
		//	lw		t9, $0000(v1)		# 00073b84:8c790000	t9=$8005bb34
		//	addiu		t2, a2, $0078		# 00073b88:24ca0078	
		//	addiu		t3, a2, $00f0		# 00073b8c:24cb00f0	
		//	sh		zero, $000a(t9)		# 00073b90:a720000a	[801de23a]
		//	lw		t8, $0000(v1)		# 00073b94:8c780000	t8=$8005bb34
		//	sb		t4, $000c(t8)		# 00073b98:a30c000c	[801de23c]
		//	lw		t6, $0000(v1)		# 00073b9c:8c6e0000	t6=$8005bb34
		//	sb		t5, $000d(t6)		# 00073ba0:a1cd000d	[801de23d]
		//	lw		t7, $0000(v1)		# 00073ba4:8c6f0000	t7=$8005bb34
		//	sb		a0, $000e(t7)		# 00073ba8:a1e4000e	[801de23e]
		//	lw		t9, $0000(v1)		# 00073bac:8c790000	t9=$8005bb34
		//	sb		a0, $000f(t9)		# 00073bb0:a324000f	[801de23f]
		//	lw		t8, $0000(v1)		# 00073bb4:8c780000	t8=$8005bb34
		//	sh		a3, $0010(t8)		# 00073bb8:a7070010	[801de240]
		//	lw		t6, $0000(v1)		# 00073bbc:8c6e0000	t6=$8005bb34
		//	sh		a2, $0012(t6)		# 00073bc0:a5c60012	[801de242]
		//	lw		t7, $0000(v1)		# 00073bc4:8c6f0000	t7=$8005bb34
		//	sh		a1, $0014(t7)		# 00073bc8:a5e50014	[801de244]
		//	lw		t9, $0000(v1)		# 00073bcc:8c790000	t9=$8005bb34
		//	sh		zero, $0016(t9)		# 00073bd0:a7200016	
		//	lw		t8, $0000(v1)		# 00073bd4:8c780000	
		//	sh		zero, $0018(t8)		# 00073bd8:a7000018	
		//	lw		t6, $0000(v1)		# 00073bdc:8c6e0000	
		//	sh		zero, $001a(t6)		# 00073be0:a5c0001a	
		//	lw		t7, $0000(v1)		# 00073be4:8c6f0000	
		//	sb		t4, $001c(t7)		# 00073be8:a1ec001c	
		//	lw		t9, $0000(v1)		# 00073bec:8c790000	
		//	sb		t5, $001d(t9)		# 00073bf0:a32d001d	
		//	lw		t8, $0000(v1)		# 00073bf4:8c780000	
		//	sb		a0, $001e(t8)		# 00073bf8:a304001e	
		//	lw		t6, $0000(v1)		# 00073bfc:8c6e0000	
		//	sb		a0, $001f(t6)		# 00073c00:a1c4001f	
		//	lw		t7, $0000(v1)		# 00073c04:8c6f0000	
		//	sh		zero, $0020(t7)		# 00073c08:a5e00020	
		//	lw		t9, $0000(v1)		# 00073c0c:8c790000	
		//	sh		t0, $0022(t9)		# 00073c10:a7280022	
		//	lw		t8, $0000(v1)		# 00073c14:8c780000	
		//	sh		a1, $0024(t8)		# 00073c18:a7050024	
		//	lw		t6, $0000(v1)		# 00073c1c:8c6e0000	
		//	sh		zero, $0026(t6)		# 00073c20:a5c00026	
		//	lw		t7, $0000(v1)		# 00073c24:8c6f0000	
		//	addiu		t6, zero, $00a3		# 00073c28:240e00a3	t6=$000000a3
		//	sh		zero, $0028(t7)		# 00073c2c:a5e00028	
		//	lw		t9, $0000(v1)		# 00073c30:8c790000	
		//	sh		zero, $002a(t9)		# 00073c34:a720002a	
		//	lw		t8, $0000(v1)		# 00073c38:8c780000	
		//	sb		ra, $002c(t8)		# 00073c3c:a31f002c	
		//	lw		t7, $0000(v1)		# 00073c40:8c6f0000	
		//	sb		t6, $002d(t7)		# 00073c44:a1ee002d	
		//	lw		t9, $0000(v1)		# 00073c48:8c790000	
		//	sb		a0, $002e(t9)		# 00073c4c:a324002e	
		//	lw		t8, $0000(v1)		# 00073c50:8c780000	
		//	sb		a0, $002f(t8)		# 00073c54:a304002f	
		//	lw		t6, $0000(v1)		# 00073c58:8c6e0000	
		//	sh		a3, $0030(t6)		# 00073c5c:a5c70030	
		//	lw		t7, $0000(v1)		# 00073c60:8c6f0000	
		//	sh		t0, $0032(t7)		# 00073c64:a5e80032	
		//	lw		t9, $0000(v1)		# 00073c68:8c790000	
		//	sh		a1, $0034(t9)		# 00073c6c:a7250034	
		//	lw		t8, $0000(v1)		# 00073c70:8c780000	
		//	sh		zero, $0036(t8)		# 00073c74:a7000036	
		//	lw		t6, $0000(v1)		# 00073c78:8c6e0000	
		//	addiu		t8, zero, $00a3		# 00073c7c:241800a3	t8=$000000a3
		//	sh		zero, $0038(t6)		# 00073c80:a5c00038	
		//	lw		t7, $0000(v1)		# 00073c84:8c6f0000	
		//	sh		zero, $003a(t7)		# 00073c88:a5e0003a	
		//	lw		t9, $0000(v1)		# 00073c8c:8c790000	
		//	sb		ra, $003c(t9)		# 00073c90:a33f003c	
		//	lw		t6, $0000(v1)		# 00073c94:8c6e0000	
		//	sb		t8, $003d(t6)		# 00073c98:a1d8003d	
		//	lw		t7, $0000(v1)		# 00073c9c:8c6f0000	
		//	sb		a0, $003e(t7)		# 00073ca0:a1e4003e	
		//	lw		t9, $0000(v1)		# 00073ca4:8c790000	
		//	sb		a0, $003f(t9)		# 00073ca8:a324003f	
		//	lw		t8, $0000(v1)		# 00073cac:8c780000	
		//	sh		zero, $0040(t8)		# 00073cb0:a7000040	
		//	lw		t6, $0000(v1)		# 00073cb4:8c6e0000	
		//	sh		t1, $0042(t6)		# 00073cb8:a5c90042	
		//	lw		t7, $0000(v1)		# 00073cbc:8c6f0000	
		//	sh		a1, $0044(t7)		# 00073cc0:a5e50044	
		//	lw		t9, $0000(v1)		# 00073cc4:8c790000	
		//	sh		zero, $0046(t9)		# 00073cc8:a7200046	
		//	lw		t8, $0000(v1)		# 00073ccc:8c780000	
		//	sh		zero, $0048(t8)		# 00073cd0:a7000048	
		//	lw		t6, $0000(v1)		# 00073cd4:8c6e0000	
		//	sh		zero, $004a(t6)		# 00073cd8:a5c0004a	
		//	lw		t7, $0000(v1)		# 00073cdc:8c6f0000	
		//	sb		a0, $004c(t7)		# 00073ce0:a1e4004c	
		//	lw		t9, $0000(v1)		# 00073ce4:8c790000	
		//	sb		a0, $004d(t9)		# 00073ce8:a324004d	
		//	lw		t8, $0000(v1)		# 00073cec:8c780000	
		//	sb		a0, $004e(t8)		# 00073cf0:a304004e	
		//	lw		t6, $0000(v1)		# 00073cf4:8c6e0000	
		//	sb		a0, $004f(t6)		# 00073cf8:a1c4004f	
		//	lw		t7, $0000(v1)		# 00073cfc:8c6f0000	
		//	sh		a3, $0050(t7)		# 00073d00:a5e70050	
		//	lw		t9, $0000(v1)		# 00073d04:8c790000	
		//	sh		t1, $0052(t9)		# 00073d08:a7290052	
		//	lw		t8, $0000(v1)		# 00073d0c:8c780000	
		//	sh		a1, $0054(t8)		# 00073d10:a7050054	
		//	lw		t6, $0000(v1)		# 00073d14:8c6e0000	
		//	sh		zero, $0056(t6)		# 00073d18:a5c00056	
		//	lw		t7, $0000(v1)		# 00073d1c:8c6f0000	
		//	sh		zero, $0058(t7)		# 00073d20:a5e00058	
		//	lw		t9, $0000(v1)		# 00073d24:8c790000	
		//	sh		zero, $005a(t9)		# 00073d28:a720005a	
		//	lw		t8, $0000(v1)		# 00073d2c:8c780000	
		//	sb		a0, $005c(t8)		# 00073d30:a304005c	
		//	lw		t6, $0000(v1)		# 00073d34:8c6e0000	
		//	sb		a0, $005d(t6)		# 00073d38:a1c4005d	
		//	lw		t7, $0000(v1)		# 00073d3c:8c6f0000	
		//	sb		a0, $005e(t7)		# 00073d40:a1e4005e	
		//	lw		t9, $0000(v1)		# 00073d44:8c790000	
		//	sb		a0, $005f(t9)		# 00073d48:a324005f	
		//	lw		t8, $0000(v1)		# 00073d4c:8c780000	
		//	sh		zero, $0060(t8)		# 00073d50:a7000060	
		//	lw		t6, $0000(v1)		# 00073d54:8c6e0000	
		//	sh		t2, $0062(t6)		# 00073d58:a5ca0062	
		//	lw		t7, $0000(v1)		# 00073d5c:8c6f0000	
		//	sh		a1, $0064(t7)		# 00073d60:a5e50064	
		//	lw		t9, $0000(v1)		# 00073d64:8c790000	
		//	addiu		t7, zero, $00b6		# 00073d68:240f00b6	t7=$000000b6
		//	sh		zero, $0066(t9)		# 00073d6c:a7200066	
		//	lw		t8, $0000(v1)		# 00073d70:8c780000	
		//	sh		zero, $0068(t8)		# 00073d74:a7000068	
		//	lw		t6, $0000(v1)		# 00073d78:8c6e0000	
		//	addiu		t8, zero, $009e		# 00073d7c:2418009e	t8=$0000009e
		//	sh		zero, $006a(t6)		# 00073d80:a5c0006a	
		//	lw		t9, $0000(v1)		# 00073d84:8c790000	
		//	sb		t7, $006c(t9)		# 00073d88:a32f006c	
		//	lw		t6, $0000(v1)		# 00073d8c:8c6e0000	
		//	addiu		t7, zero, $0088		# 00073d90:240f0088	t7=$00000088
		//	sb		t8, $006d(t6)		# 00073d94:a1d8006d	
		//	lw		t9, $0000(v1)		# 00073d98:8c790000	
		//	sb		t7, $006e(t9)		# 00073d9c:a32f006e	
		//	lw		t8, $0000(v1)		# 00073da0:8c780000	
		//	sb		a0, $006f(t8)		# 00073da4:a304006f	
		//	lw		t6, $0000(v1)		# 00073da8:8c6e0000	
		//	sh		a3, $0070(t6)		# 00073dac:a5c70070	
		//	lw		t7, $0000(v1)		# 00073db0:8c6f0000	
		//	sh		t2, $0072(t7)		# 00073db4:a5ea0072	
		//	lw		t9, $0000(v1)		# 00073db8:8c790000	
		//	sh		a1, $0074(t9)		# 00073dbc:a7250074	
		//	lw		t8, $0000(v1)		# 00073dc0:8c780000	
		//	addiu		t9, zero, $00b6		# 00073dc4:241900b6	t9=$000000b6
		//	sh		zero, $0076(t8)		# 00073dc8:a7000076	
		//	lw		t6, $0000(v1)		# 00073dcc:8c6e0000	
		//	sh		zero, $0078(t6)		# 00073dd0:a5c00078	
		//	lw		t7, $0000(v1)		# 00073dd4:8c6f0000	
		//	addiu		t6, zero, $009e		# 00073dd8:240e009e	t6=$0000009e
		//	sh		zero, $007a(t7)		# 00073ddc:a5e0007a	
		//	lw		t8, $0000(v1)		# 00073de0:8c780000	
		//	sb		t9, $007c(t8)		# 00073de4:a319007c	
		//	lw		t7, $0000(v1)		# 00073de8:8c6f0000	
		//	addiu		t9, zero, $0088		# 00073dec:24190088	t9=$00000088
		//	sb		t6, $007d(t7)		# 00073df0:a1ee007d	
		//	lw		t8, $0000(v1)		# 00073df4:8c780000	
		//	sb		t9, $007e(t8)		# 00073df8:a319007e	
		//	lw		t6, $0000(v1)		# 00073dfc:8c6e0000	
		//	sb		a0, $007f(t6)		# 00073e00:a1c4007f	
		//	lw		t7, $0000(v1)		# 00073e04:8c6f0000	
		//	sh		zero, $0080(t7)		# 00073e08:a5e00080	
		//	lw		t9, $0000(v1)		# 00073e0c:8c790000	
		//	sh		t3, $0082(t9)		# 00073e10:a72b0082	
		//	lw		t8, $0000(v1)		# 00073e14:8c780000	
		//	sh		a1, $0084(t8)		# 00073e18:a7050084	
		//	lw		t6, $0000(v1)		# 00073e1c:8c6e0000	
		//	addiu		t8, zero, $007f		# 00073e20:2418007f	t8=$0000007f
		//	sh		zero, $0086(t6)		# 00073e24:a5c00086	
		//	lw		t7, $0000(v1)		# 00073e28:8c6f0000	
		//	sh		zero, $0088(t7)		# 00073e2c:a5e00088	
		//	lw		t9, $0000(v1)		# 00073e30:8c790000	
		//	addiu		t7, zero, $0043		# 00073e34:240f0043	t7=$00000043
		//	sh		zero, $008a(t9)		# 00073e38:a720008a	
		//	lw		t6, $0000(v1)		# 00073e3c:8c6e0000	
		//	sb		t8, $008c(t6)		# 00073e40:a1d8008c	
		//	lw		t9, $0000(v1)		# 00073e44:8c790000	
		//	addiu		t8, zero, $000d		# 00073e48:2418000d	t8=$0000000d
		//	sb		t7, $008d(t9)		# 00073e4c:a32f008d	
		//	lw		t6, $0000(v1)		# 00073e50:8c6e0000	
		//	sb		t8, $008e(t6)		# 00073e54:a1d8008e	
		//	lw		t7, $0000(v1)		# 00073e58:8c6f0000	
		//	sb		a0, $008f(t7)		# 00073e5c:a1e4008f	
		//	lw		t9, $0000(v1)		# 00073e60:8c790000	
		//	sh		a3, $0090(t9)		# 00073e64:a7270090	
		//	lw		t8, $0000(v1)		# 00073e68:8c780000	
		//	sh		t3, $0092(t8)		# 00073e6c:a70b0092	
		//	lw		t6, $0000(v1)		# 00073e70:8c6e0000	
		//	sh		a1, $0094(t6)		# 00073e74:a5c50094	
		//	lw		t7, $0000(v1)		# 00073e78:8c6f0000	
		//	addiu		t6, zero, $007f		# 00073e7c:240e007f	t6=$0000007f
		//	sh		zero, $0096(t7)		# 00073e80:a5e00096	
		//	lw		t9, $0000(v1)		# 00073e84:8c790000	
		//	sh		zero, $0098(t9)		# 00073e88:a7200098	
		//	lw		t8, $0000(v1)		# 00073e8c:8c780000	
		//	addiu		t9, zero, $0043		# 00073e90:24190043	t9=$00000043
		//	sh		zero, $009a(t8)		# 00073e94:a700009a	
		//	lw		t7, $0000(v1)		# 00073e98:8c6f0000	
		//	sb		t6, $009c(t7)		# 00073e9c:a1ee009c	
		//	lw		t8, $0000(v1)		# 00073ea0:8c780000	
		//	addiu		t6, zero, $000d		# 00073ea4:240e000d	t6=$0000000d
		//	sb		t9, $009d(t8)		# 00073ea8:a319009d	
		//	lw		t7, $0000(v1)		# 00073eac:8c6f0000	
		//	sb		t6, $009e(t7)		# 00073eb0:a1ee009e	
		//	lw		t9, $0000(v1)		# 00073eb4:8c790000	
		//	beq		zero, zero, $00074260	# 00073eb8:100000e9	v __00074260
		//	sb		a0, $009f(t9)		# 00073ebc:a324009f	
		//__00073ec0:					# 
		//	addiu		at, zero, $0024		# 00073ec0:24010024	at=$00000024
		//	div		v0, at			# 00073ec4:0041001a	
		//	lui		v1, $8006		# 00073ec8:3c038006	v1=$80060000
		//	addiu		v1, v1, $bb34		# 00073ecc:2463bb34	v1=$8005bb34
		//	lw		t8, $0000(v1)		# 00073ed0:8c780000	t8=$8005bb34
		//	mflo		t6			# 00073ed4:00007012	
		//	subu		a2, t7, t6		# 00073ed8:01ee3023	
		//	sh		zero, $0000(t8)		# 00073edc:a7000000	[801de230]
		//	lw		t7, $0000(v1)		# 00073ee0:8c6f0000	t7=$8005bb34
		//	addiu		a1, zero, $fffb		# 00073ee4:2405fffb	a1=$fffffffb
		//	addiu		a0, zero, $00ff		# 00073ee8:240400ff	a0=$000000ff
		//	sh		a2, $0002(t7)		# 00073eec:a5e60002	[801de232]
		//	lw		t6, $0000(v1)		# 00073ef0:8c6e0000	t6=$8005bb34
		//	addiu		a3, zero, $0140		# 00073ef4:24070140	a3=$00000140
		//	addiu		t0, a2, $003c		# 00073ef8:24c8003c	
		//	sh		a1, $0004(t6)		# 00073efc:a5c50004	[801de234]
		//	lw		t9, $0000(v1)		# 00073f00:8c790000	t9=$8005bb34
		//	addiu		t6, zero, $005a		# 00073f04:240e005a	t6=$0000005a
		//	addiu		t4, zero, $008c		# 00073f08:240c008c	t4=$0000008c
		//	sh		zero, $0006(t9)		# 00073f0c:a7200006	[801de236]
		//	lw		t8, $0000(v1)		# 00073f10:8c780000	t8=$8005bb34
		//	addiu		t5, zero, $0096		# 00073f14:240d0096	t5=$00000096
		//	addiu		t1, a2, $0064		# 00073f18:24c90064	
		//	sh		zero, $0008(t8)		# 00073f1c:a7000008	[801de238]
		//	lw		t7, $0000(v1)		# 00073f20:8c6f0000	t7=$8005bb34
		//	addiu		t8, zero, $0087		# 00073f24:24180087	t8=$00000087
		//	addiu		t2, a2, $0078		# 00073f28:24ca0078	
		//	sh		zero, $000a(t7)		# 00073f2c:a5e0000a	[801de23a]
		//	lw		t9, $0000(v1)		# 00073f30:8c790000	t9=$8005bb34
		//	addiu		ra, zero, $000f		# 00073f34:241f000f	ra=$0000000f
		//	addiu		t3, a2, $00f0		# 00073f38:24cb00f0	
		//	sb		t6, $000c(t9)		# 00073f3c:a32e000c	[801de23c]
		//	lw		t7, $0000(v1)		# 00073f40:8c6f0000	t7=$8005bb34
		//	addiu		t6, zero, $00c8		# 00073f44:240e00c8	t6=$000000c8
		//	sb		t8, $000d(t7)		# 00073f48:a1f8000d	[801de23d]
		//	lw		t9, $0000(v1)		# 00073f4c:8c790000	t9=$8005bb34
		//	sb		t6, $000e(t9)		# 00073f50:a32e000e	[801de23e]
		//	lw		t8, $0000(v1)		# 00073f54:8c780000	t8=$8005bb34
		//	sb		a0, $000f(t8)		# 00073f58:a304000f	[801de23f]
		//	lw		t7, $0000(v1)		# 00073f5c:8c6f0000	t7=$8005bb34
		//	sh		a3, $0010(t7)		# 00073f60:a5e70010	[801de240]
		//	lw		t6, $0000(v1)		# 00073f64:8c6e0000	t6=$8005bb34
		//	sh		a2, $0012(t6)		# 00073f68:a5c60012	[801de242]
		//	lw		t9, $0000(v1)		# 00073f6c:8c790000	
		//	sh		a1, $0014(t9)		# 00073f70:a7250014	
		//	lw		t8, $0000(v1)		# 00073f74:8c780000	
		//	addiu		t9, zero, $005a		# 00073f78:2419005a	t9=$0000005a
		//	sh		zero, $0016(t8)		# 00073f7c:a7000016	
		//	lw		t7, $0000(v1)		# 00073f80:8c6f0000	
		//	sh		zero, $0018(t7)		# 00073f84:a5e00018	
		//	lw		t6, $0000(v1)		# 00073f88:8c6e0000	
		//	addiu		t7, zero, $0087		# 00073f8c:240f0087	t7=$00000087
		//	sh		zero, $001a(t6)		# 00073f90:a5c0001a	
		//	lw		t8, $0000(v1)		# 00073f94:8c780000	
		//	sb		t9, $001c(t8)		# 00073f98:a319001c	
		//	lw		t6, $0000(v1)		# 00073f9c:8c6e0000	
		//	addiu		t9, zero, $00c8		# 00073fa0:241900c8	t9=$000000c8
		//	sb		t7, $001d(t6)		# 00073fa4:a1cf001d	
		//	lw		t8, $0000(v1)		# 00073fa8:8c780000	
		//	sb		t9, $001e(t8)		# 00073fac:a319001e	
		//	lw		t7, $0000(v1)		# 00073fb0:8c6f0000	
		//	sb		a0, $001f(t7)		# 00073fb4:a1e4001f	
		//	lw		t6, $0000(v1)		# 00073fb8:8c6e0000	
		//	sh		zero, $0020(t6)		# 00073fbc:a5c00020	
		//	lw		t9, $0000(v1)		# 00073fc0:8c790000	
		//	sh		t0, $0022(t9)		# 00073fc4:a7280022	
		//	lw		t8, $0000(v1)		# 00073fc8:8c780000	
		//	sh		a1, $0024(t8)		# 00073fcc:a7050024	
		//	lw		t7, $0000(v1)		# 00073fd0:8c6f0000	
		//	addiu		t8, zero, $005f		# 00073fd4:2418005f	t8=$0000005f
		//	sh		zero, $0026(t7)		# 00073fd8:a5e00026	
		//	lw		t6, $0000(v1)		# 00073fdc:8c6e0000	
		//	sh		zero, $0028(t6)		# 00073fe0:a5c00028	
		//	lw		t9, $0000(v1)		# 00073fe4:8c790000	
		//	sh		zero, $002a(t9)		# 00073fe8:a720002a	
		//	lw		t7, $0000(v1)		# 00073fec:8c6f0000	
		//	sb		t8, $002c(t7)		# 00073ff0:a1f8002c	
		//	lw		t6, $0000(v1)		# 00073ff4:8c6e0000	
		//	sb		t4, $002d(t6)		# 00073ff8:a1cc002d	
		//	lw		t9, $0000(v1)		# 00073ffc:8c790000	
		//	sb		t5, $002e(t9)		# 00074000:a32d002e	
		//	lw		t8, $0000(v1)		# 00074004:8c780000	
		//	sb		a0, $002f(t8)		# 00074008:a304002f	
		//	lw		t7, $0000(v1)		# 0007400c:8c6f0000	
		//	sh		a3, $0030(t7)		# 00074010:a5e70030	
		//	lw		t6, $0000(v1)		# 00074014:8c6e0000	
		//	sh		t0, $0032(t6)		# 00074018:a5c80032	
		//	lw		t9, $0000(v1)		# 0007401c:8c790000	
		//	sh		a1, $0034(t9)		# 00074020:a7250034	
		//	lw		t8, $0000(v1)		# 00074024:8c780000	
		//	addiu		t9, zero, $005f		# 00074028:2419005f	t9=$0000005f
		//	sh		zero, $0036(t8)		# 0007402c:a7000036	
		//	lw		t7, $0000(v1)		# 00074030:8c6f0000	
		//	sh		zero, $0038(t7)		# 00074034:a5e00038	
		//	lw		t6, $0000(v1)		# 00074038:8c6e0000	
		//	sh		zero, $003a(t6)		# 0007403c:a5c0003a	
		//	lw		t8, $0000(v1)		# 00074040:8c780000	
		//	sb		t9, $003c(t8)		# 00074044:a319003c	
		//	lw		t7, $0000(v1)		# 00074048:8c6f0000	
		//	sb		t4, $003d(t7)		# 0007404c:a1ec003d	
		//	lw		t6, $0000(v1)		# 00074050:8c6e0000	
		//	sb		t5, $003e(t6)		# 00074054:a1cd003e	
		//	lw		t9, $0000(v1)		# 00074058:8c790000	
		//	sb		a0, $003f(t9)		# 0007405c:a324003f	
		//	lw		t8, $0000(v1)		# 00074060:8c780000	
		//	sh		zero, $0040(t8)		# 00074064:a7000040	
		//	lw		t7, $0000(v1)		# 00074068:8c6f0000	
		//	sh		t1, $0042(t7)		# 0007406c:a5e90042	
		//	lw		t6, $0000(v1)		# 00074070:8c6e0000	
		//	sh		a1, $0044(t6)		# 00074074:a5c50044	
		//	lw		t9, $0000(v1)		# 00074078:8c790000	
		//	sh		zero, $0046(t9)		# 0007407c:a7200046	
		//	lw		t8, $0000(v1)		# 00074080:8c780000	
		//	sh		zero, $0048(t8)		# 00074084:a7000048	
		//	lw		t7, $0000(v1)		# 00074088:8c6f0000	
		//	addiu		t8, zero, $0069		# 0007408c:24180069	t8=$00000069
		//	sh		zero, $004a(t7)		# 00074090:a5e0004a	
		//	lw		t6, $0000(v1)		# 00074094:8c6e0000	
		//	sb		t4, $004c(t6)		# 00074098:a1cc004c	
		//	lw		t9, $0000(v1)		# 0007409c:8c790000	
		//	sb		t5, $004d(t9)		# 000740a0:a32d004d	
		//	lw		t7, $0000(v1)		# 000740a4:8c6f0000	
		//	sb		t8, $004e(t7)		# 000740a8:a1f8004e	
		//	lw		t6, $0000(v1)		# 000740ac:8c6e0000	
		//	sb		a0, $004f(t6)		# 000740b0:a1c4004f	
		//	lw		t9, $0000(v1)		# 000740b4:8c790000	
		//	sh		a3, $0050(t9)		# 000740b8:a7270050	
		//	lw		t8, $0000(v1)		# 000740bc:8c780000	
		//	sh		t1, $0052(t8)		# 000740c0:a7090052	
		//	lw		t7, $0000(v1)		# 000740c4:8c6f0000	
		//	sh		a1, $0054(t7)		# 000740c8:a5e50054	
		//	lw		t6, $0000(v1)		# 000740cc:8c6e0000	
		//	sh		zero, $0056(t6)		# 000740d0:a5c00056	
		//	lw		t9, $0000(v1)		# 000740d4:8c790000	
		//	sh		zero, $0058(t9)		# 000740d8:a7200058	
		//	lw		t8, $0000(v1)		# 000740dc:8c780000	
		//	addiu		t9, zero, $0069		# 000740e0:24190069	t9=$00000069
		//	sh		zero, $005a(t8)		# 000740e4:a700005a	
		//	lw		t7, $0000(v1)		# 000740e8:8c6f0000	
		//	sb		t4, $005c(t7)		# 000740ec:a1ec005c	
		//	lw		t6, $0000(v1)		# 000740f0:8c6e0000	
		//	sb		t5, $005d(t6)		# 000740f4:a1cd005d	
		//	lw		t8, $0000(v1)		# 000740f8:8c780000	
		//	sb		t9, $005e(t8)		# 000740fc:a319005e	
		//	lw		t7, $0000(v1)		# 00074100:8c6f0000	
		//	sb		a0, $005f(t7)		# 00074104:a1e4005f	
		//	lw		t6, $0000(v1)		# 00074108:8c6e0000	
		//	sh		zero, $0060(t6)		# 0007410c:a5c00060	
		//	lw		t9, $0000(v1)		# 00074110:8c790000	
		//	sh		t2, $0062(t9)		# 00074114:a72a0062	
		//	lw		t8, $0000(v1)		# 00074118:8c780000	
		//	sh		a1, $0064(t8)		# 0007411c:a7050064	
		//	lw		t7, $0000(v1)		# 00074120:8c6f0000	
		//	addiu		t8, zero, $0005		# 00074124:24180005	t8=$00000005
		//	sh		zero, $0066(t7)		# 00074128:a5e00066	
		//	lw		t6, $0000(v1)		# 0007412c:8c6e0000	
		//	sh		zero, $0068(t6)		# 00074130:a5c00068	
		//	lw		t9, $0000(v1)		# 00074134:8c790000	
		//	addiu		t6, zero, $0064		# 00074138:240e0064	t6=$00000064
		//	sh		zero, $006a(t9)		# 0007413c:a720006a	
		//	lw		t7, $0000(v1)		# 00074140:8c6f0000	
		//	sb		t8, $006c(t7)		# 00074144:a1f8006c	
		//	lw		t9, $0000(v1)		# 00074148:8c790000	
		//	sb		t6, $006d(t9)		# 0007414c:a32e006d	
		//	lw		t8, $0000(v1)		# 00074150:8c780000	
		//	sb		ra, $006e(t8)		# 00074154:a31f006e	
		//	lw		t7, $0000(v1)		# 00074158:8c6f0000	
		//	sb		a0, $006f(t7)		# 0007415c:a1e4006f	
		//	lw		t6, $0000(v1)		# 00074160:8c6e0000	
		//	sh		a3, $0070(t6)		# 00074164:a5c70070	
		//	lw		t9, $0000(v1)		# 00074168:8c790000	
		//	sh		t2, $0072(t9)		# 0007416c:a72a0072	
		//	lw		t8, $0000(v1)		# 00074170:8c780000	
		//	sh		a1, $0074(t8)		# 00074174:a7050074	
		//	lw		t7, $0000(v1)		# 00074178:8c6f0000	
		//	addiu		t8, zero, $0005		# 0007417c:24180005	t8=$00000005
		//	sh		zero, $0076(t7)		# 00074180:a5e00076	
		//	lw		t6, $0000(v1)		# 00074184:8c6e0000	
		//	sh		zero, $0078(t6)		# 00074188:a5c00078	
		//	lw		t9, $0000(v1)		# 0007418c:8c790000	
		//	addiu		t6, zero, $0064		# 00074190:240e0064	t6=$00000064
		//	sh		zero, $007a(t9)		# 00074194:a720007a	
		//	lw		t7, $0000(v1)		# 00074198:8c6f0000	
		//	sb		t8, $007c(t7)		# 0007419c:a1f8007c	
		//	lw		t9, $0000(v1)		# 000741a0:8c790000	
		//	sb		t6, $007d(t9)		# 000741a4:a32e007d	
		//	lw		t8, $0000(v1)		# 000741a8:8c780000	
		//	sb		ra, $007e(t8)		# 000741ac:a31f007e	
		//	lw		t7, $0000(v1)		# 000741b0:8c6f0000	
		//	sb		a0, $007f(t7)		# 000741b4:a1e4007f	
		//	lw		t6, $0000(v1)		# 000741b8:8c6e0000	
		//	sh		zero, $0080(t6)		# 000741bc:a5c00080	
		//	lw		t9, $0000(v1)		# 000741c0:8c790000	
		//	sh		t3, $0082(t9)		# 000741c4:a72b0082	
		//	lw		t8, $0000(v1)		# 000741c8:8c780000	
		//	sh		a1, $0084(t8)		# 000741cc:a7050084	
		//	lw		t7, $0000(v1)		# 000741d0:8c6f0000	
		//	sh		zero, $0086(t7)		# 000741d4:a5e00086	
		//	lw		t6, $0000(v1)		# 000741d8:8c6e0000	
		//	addiu		t7, zero, $0019		# 000741dc:240f0019	t7=$00000019
		//	sh		zero, $0088(t6)		# 000741e0:a5c00088	
		//	lw		t9, $0000(v1)		# 000741e4:8c790000	
		//	sh		zero, $008a(t9)		# 000741e8:a720008a	
		//	lw		t8, $0000(v1)		# 000741ec:8c780000	
		//	sb		zero, $008c(t8)		# 000741f0:a300008c	
		//	lw		t6, $0000(v1)		# 000741f4:8c6e0000	
		//	sb		t7, $008d(t6)		# 000741f8:a1cf008d	
		//	lw		t9, $0000(v1)		# 000741fc:8c790000	
		//	sb		ra, $008e(t9)		# 00074200:a33f008e	
		//	lw		t8, $0000(v1)		# 00074204:8c780000	
		//	sb		a0, $008f(t8)		# 00074208:a304008f	
		//	lw		t7, $0000(v1)		# 0007420c:8c6f0000	
		//	sh		a3, $0090(t7)		# 00074210:a5e70090	
		//	lw		t6, $0000(v1)		# 00074214:8c6e0000	
		//	sh		t3, $0092(t6)		# 00074218:a5cb0092	
		//	lw		t9, $0000(v1)		# 0007421c:8c790000	
		//	sh		a1, $0094(t9)		# 00074220:a7250094	
		//	lw		t8, $0000(v1)		# 00074224:8c780000	
		//	sh		zero, $0096(t8)		# 00074228:a7000096	
		//	lw		t7, $0000(v1)		# 0007422c:8c6f0000	
		//	addiu		t8, zero, $0019		# 00074230:24180019	t8=$00000019
		//	sh		zero, $0098(t7)		# 00074234:a5e00098	
		//	lw		t6, $0000(v1)		# 00074238:8c6e0000	
		//	sh		zero, $009a(t6)		# 0007423c:a5c0009a	
		//	lw		t9, $0000(v1)		# 00074240:8c790000	
		//	sb		zero, $009c(t9)		# 00074244:a320009c	
		//	lw		t7, $0000(v1)		# 00074248:8c6f0000	
		//	sb		t8, $009d(t7)		# 0007424c:a1f8009d	
		//	lw		t6, $0000(v1)		# 00074250:8c6e0000	
		//	sb		ra, $009e(t6)		# 00074254:a1df009e	
		//	lw		t9, $0000(v1)		# 00074258:8c790000	
		//	sb		a0, $009f(t9)		# 0007425c:a324009f	
		//__00074260:					# 
		//	lui		t0, $8006		# 00074260:3c088006	t0=$80060000
		//	addiu		t0, t0, $bb2c		# 00074264:2508bb2c	t0=$8005bb2c
		//	lw		v0, $0000(t0)		# 00074268:8d020000	v0=$8005bb2c
		//	lui		t7, $e700		# 0007426c:3c0fe700	t7=$e7000000
		//	lui		t9, $b900		# 00074270:3c19b900	t9=$b9000000
		//	addiu		t8, v0, $0008		# 00074274:24580008	t8=$801cfed0
		//	sw		t8, $0000(t0)		# 00074278:ad180000	[8005bb2c]
		//	sw		zero, $0004(v0)		# 0007427c:ac400004	[801cfecc]
		//	sw		t7, $0000(v0)		# 00074280:ac4f0000	[801cfec8]
		//	lw		v0, $0000(t0)		# 00074284:8d020000	v0=$8005bb2c
		//	lui		t8, $0f0a		# 00074288:3c180f0a	t8=$0f0a0000
		//	ori		t8, t8, $4000		# 0007428c:37184000	t8=$0f0a4000
		//	addiu		t6, v0, $0008		# 00074290:244e0008	t6=$801cfed0
		//	sw		t6, $0000(t0)		# 00074294:ad0e0000	[8005bb2c]
		//	ori		t9, t9, $031d		# 00074298:3739031d	t9=$b900031d
		//	sw		t9, $0000(v0)		# 0007429c:ac590000	[801cfec8]
		//	sw		t8, $0004(v0)		# 000742a0:ac580004	[801cfecc]
		//	lw		v0, $0000(t0)		# 000742a4:8d020000	v0=$8005bb2c
		//	lui		t9, $fffe		# 000742a8:3c19fffe	t9=$fffe0000
		//	lui		t6, $fcff		# 000742ac:3c0efcff	t6=$fcff0000
		//	addiu		t7, v0, $0008		# 000742b0:244f0008	t7=$801cfed0
		//	sw		t7, $0000(t0)		# 000742b4:ad0f0000	[8005bb2c]
		//	ori		t6, t6, $ffff		# 000742b8:35ceffff	t6=$fcffffff
		//	ori		t9, t9, $793c		# 000742bc:3739793c	t9=$fffe793c
		//	sw		t9, $0004(v0)		# 000742c0:ac590004	[801cfecc]
		//	sw		t6, $0000(v0)		# 000742c4:ac4e0000	[801cfec8]
		//	lw		v0, $0000(t0)		# 000742c8:8d020000	v0=$8005bb2c
		//	addiu		t6, zero, $ffff		# 000742cc:240effff	t6=$ffffffff
		//	lui		t7, $b600		# 000742d0:3c0fb600	t7=$b6000000
		//	addiu		t8, v0, $0008		# 000742d4:24580008	t8=$801cfed0
		//	sw		t8, $0000(t0)		# 000742d8:ad180000	[8005bb2c]
		//	sw		t6, $0004(v0)		# 000742dc:ac4e0004	[801cfecc]
		//	sw		t7, $0000(v0)		# 000742e0:ac4f0000	[801cfec8]
		//	lw		v0, $0000(t0)		# 000742e4:8d020000	v0=$8005bb2c
		//	lui		at, $c2c8		# 000742e8:3c01c2c8	at=$c2c80000
		//	mtc1		at, $f6			# 000742ec:44813000	
		//	addiu		t9, v0, $0008		# 000742f0:24590008	t9=$801cfed0
		//	sw		t9, $0000(t0)		# 000742f4:ad190000	[8005bb2c]
		//	addiu		t7, zero, $0204		# 000742f8:240f0204	t7=$00000204
		//	lui		t8, $b700		# 000742fc:3c18b700	t8=$b7000000
		//	lui		at, $42c8		# 00074300:3c0142c8	at=$42c80000
		//	mtc1		at, $f8			# 00074304:44814000	
		//	sw		t8, $0000(v0)		# 00074308:ac580000	
		//	sw		t7, $0004(v0)		# 0007430c:ac4f0004	
		//	lui		at, $3f80		# 00074310:3c013f80	at=$3f800000
		//	mtc1		at, $f10		# 00074314:44815000	
		//	lui		t1, $8006		# 00074318:3c098006	t1=$80060000
		//	addiu		t1, t1, $bb38		# 0007431c:2529bb38	t1=$8005bb38
		//	mfc1		a1, $f0			# 00074320:44050000	
		//	lw		a0, $0000(t1)		# 00074324:8d240000	a0=$8005bb38
		//	swc1		$f0, $0010(sp)		# 00074328:e7a00010	
		//	lui		a2, $43a0		# 0007432c:3c0643a0	a2=$43a00000
		//	lui		a3, $4370		# 00074330:3c074370	a3=$43700000
		//	swc1		$f6, $0014(sp)		# 00074334:e7a60014	
		//	swc1		$f8, $0018(sp)		# 00074338:e7a80018	
		//	jal		$0001db44		# 0007433c:0c0076d1	^ FNC_0001db44
		//	swc1		$f10, $001c(sp)		# 00074340:e7aa001c	
		N64.guOrtho();
		//	lui		t0, $8006		# 00074344:3c088006	t0=$80060000
		//	addiu		t0, t0, $bb2c		# 00074348:2508bb2c	t0=$8005bb2c
		//	lw		v0, $0000(t0)		# 0007434c:8d020000	v0=$8005bb2c
		//	lui		t9, $0103		# 00074350:3c190103	t9=$01030000
		//	lui		t1, $8006		# 00074354:3c098006	t1=$80060000
		//	addiu		t6, v0, $0008		# 00074358:244e0008	t6=$801cfed0
		//	sw		t6, $0000(t0)		# 0007435c:ad0e0000	[8005bb2c]
		//	ori		t9, t9, $0040		# 00074360:37390040	t9=$01030040
		//	addiu		t1, t1, $bb38		# 00074364:2529bb38	t1=$8005bb38
		//	sw		t9, $0000(v0)		# 00074368:ac590000	[801cfec8]
		//	lw		t8, $0000(t1)		# 0007436c:8d380000	t8=$8005bb38
		//	lui		at, $1fff		# 00074370:3c011fff	at=$1fff0000
		//	ori		at, at, $ffff		# 00074374:3421ffff	at=$1fffffff
		//	and		t7, t8, at		# 00074378:03017824	
		//	sw		t7, $0004(v0)		# 0007437c:ac4f0004	[801cfecc]
		//	lw		t6, $0000(t1)		# 00074380:8d2e0000	t6=$8005bb38
		//	or		a0, zero, zero		# 00074384:00002025	
		//	or		a1, zero, zero		# 00074388:00002825	
		//	addiu		a3, t6, $0040		# 0007438c:25c70040	a3=$801ed950
		//	sw		a3, $0000(t1)		# 00074390:ad270000	[8005bb38]
		//	jal		$000039d0		# 00074394:0c000e74	^ FNC_000039d0
		//	or		a2, zero, zero		# 00074398:00003025	
		N64.fnc000039d0();
		//	lui		t0, $8006		# 0007439c:3c088006	t0=$80060000
		//	addiu		t0, t0, $bb2c		# 000743a0:2508bb2c	t0=$8005bb2c
		//	lw		v0, $0000(t0)		# 000743a4:8d020000	v0=$8005bb2c
		//	lui		t7, $0102		# 000743a8:3c0f0102	t7=$01020000
		//	lui		t1, $8006		# 000743ac:3c098006	t1=$80060000
		//	addiu		t8, v0, $0008		# 000743b0:24580008	t8=$801cfed0
		//	sw		t8, $0000(t0)		# 000743b4:ad180000	[8005bb2c]
		//	ori		t7, t7, $0040		# 000743b8:35ef0040	t7=$01020040
		//	addiu		t1, t1, $bb38		# 000743bc:2529bb38	t1=$8005bb38
		//	sw		t7, $0000(v0)		# 000743c0:ac4f0000	[801cfec8]
		//	lw		t6, $0000(t1)		# 000743c4:8d2e0000	t6=$8005bb38
		//	lui		at, $1fff		# 000743c8:3c011fff	at=$1fff0000
		//	ori		at, at, $ffff		# 000743cc:3421ffff	at=$1fffffff
		//	and		t9, t6, at		# 000743d0:01c1c824	
		//	sw		t9, $0004(v0)		# 000743d4:ac590004	[801cfecc]
		//	lw		t8, $0000(t1)		# 000743d8:8d380000	t8=$8005bb38
		//	lui		t6, $800a		# 000743dc:3c0e800a	t6=$800a0000
		//	lui		v1, $8006		# 000743e0:3c038006	v1=$80060000
		//	addiu		t7, t8, $0040		# 000743e4:270f0040	t7=$801ed950
		//	sw		t7, $0000(t1)		# 000743e8:ad2f0000	[8005bb38]
		//	lw		t6, $0964(t6)		# 000743ec:8dce0964	t6=$800a0964
		//	addiu		v1, v1, $bb34		# 000743f0:2463bb34	v1=$8005bb34
		//	lui		t9, $800e		# 000743f4:3c19800e	t9=$800e0000
		//	beq		t6, zero, $00074410	# 000743f8:11c00005	v __00074410
		//	lui		t7, $0400		# 000743fc:3c0f0400	t7=$04000000
		//	lbu		t9, $73df(t9)		# 00074400:933973df	t9=$800e73df
		//	addiu		at, zero, $0004		# 00074404:24010004	at=$00000004
		//	beql		t9, at, $000744c8	# 00074408:5321002f	v __000744c8
		//	lw		v0, $0000(t0)		# 0007440c:8d020000	v0=$8005bb2c
		//__00074410:					# 
		//	lw		v0, $0000(t0)		# 00074410:8d020000	v0=$8005bb2c
		//	ori		t7, t7, $289f		# 00074414:35ef289f	t7=$0400289f
		//	lui		at, $8000		# 00074418:3c018000	at=$80000000
		//	addiu		t8, v0, $0008		# 0007441c:24580008	t8=$801cfed0
		//	sw		t8, $0000(t0)		# 00074420:ad180000	[8005bb2c]
		//	sw		t7, $0000(v0)		# 00074424:ac4f0000	[801cfec8]
		//	lw		t6, $0000(v1)		# 00074428:8c6e0000	t6=$8005bb34
		//	lui		t7, $b100		# 0007442c:3c0fb100	t7=$b1000000
		//	ori		t7, t7, $0204		# 00074430:35ef0204	t7=$b1000204
		//	addu		t9, t6, at		# 00074434:01c1c821	t9=$001de230
		//	sw		t9, $0004(v0)		# 00074438:ac590004	[801cfecc]
		//	lw		v0, $0000(t0)		# 0007443c:8d020000	v0=$8005bb2c
		//	lui		t6, $0002		# 00074440:3c0e0002	t6=$00020000
		//	ori		t6, t6, $0406		# 00074444:35ce0406	t6=$00020406
		//	addiu		t8, v0, $0008		# 00074448:24580008	
		//	sw		t8, $0000(t0)		# 0007444c:ad180000	
		//	sw		t6, $0004(v0)		# 00074450:ac4e0004	
		//	sw		t7, $0000(v0)		# 00074454:ac4f0000	
		//	lw		v0, $0000(t0)		# 00074458:8d020000	
		//	lui		t7, $0006		# 0007445c:3c0f0006	t7=$00060000
		//	lui		t8, $b104		# 00074460:3c18b104	t8=$b1040000
		//	addiu		t9, v0, $0008		# 00074464:24590008	
		//	sw		t9, $0000(t0)		# 00074468:ad190000	
		//	ori		t8, t8, $0608		# 0007446c:37180608	t8=$b1040608
		//	ori		t7, t7, $080a		# 00074470:35ef080a	t7=$0006080a
		//	sw		t7, $0004(v0)		# 00074474:ac4f0004	
		//	sw		t8, $0000(v0)		# 00074478:ac580000	
		//	lw		v0, $0000(t0)		# 0007447c:8d020000	
		//	lui		t8, $000a		# 00074480:3c18000a	t8=$000a0000
		//	lui		t9, $b108		# 00074484:3c19b108	t9=$b1080000
		//	addiu		t6, v0, $0008		# 00074488:244e0008	
		//	sw		t6, $0000(t0)		# 0007448c:ad0e0000	
		//	ori		t9, t9, $0a0c		# 00074490:37390a0c	t9=$b1080a0c
		//	ori		t8, t8, $0c0e		# 00074494:37180c0e	t8=$000a0c0e
		//	sw		t8, $0004(v0)		# 00074498:ac580004	
		//	sw		t9, $0000(v0)		# 0007449c:ac590000	
		//	lw		v0, $0000(t0)		# 000744a0:8d020000	
		//	lui		t9, $000e		# 000744a4:3c19000e	t9=$000e0000
		//	lui		t6, $b10c		# 000744a8:3c0eb10c	t6=$b10c0000
		//	addiu		t7, v0, $0008		# 000744ac:244f0008	
		//	sw		t7, $0000(t0)		# 000744b0:ad0f0000	
		//	ori		t6, t6, $0e10		# 000744b4:35ce0e10	t6=$b10c0e10
		//	ori		t9, t9, $1012		# 000744b8:37391012	t9=$000e1012
		//	sw		t9, $0004(v0)		# 000744bc:ac590004	
		//	sw		t6, $0000(v0)		# 000744c0:ac4e0000	
		//	lw		v0, $0000(t0)		# 000744c4:8d020000	
		//__000744c8:					# 
		//	lui		t7, $e700		# 000744c8:3c0fe700	t7=$e7000000
		//	addiu		t8, v0, $0008		# 000744cc:24580008	
		//	sw		t8, $0000(t0)		# 000744d0:ad180000	
		//	sw		zero, $0004(v0)		# 000744d4:ac400004	
		//	sw		t7, $0000(v0)		# 000744d8:ac4f0000	
		//	lw		t6, $0000(v1)		# 000744dc:8c6e0000	
		//	lw		v0, $0000(t0)		# 000744e0:8d020000	
		//	lui		t7, $b900		# 000744e4:3c0fb900	t7=$b9000000
		//	addiu		t9, t6, $00a0		# 000744e8:25d900a0	
		//	addiu		t8, v0, $0008		# 000744ec:24580008	
		//	sw		t9, $0000(v1)		# 000744f0:ac790000	
		//	sw		t8, $0000(t0)		# 000744f4:ad180000	
		//	lui		t6, $0055		# 000744f8:3c0e0055	t6=$00550000
		//	ori		t6, t6, $2078		# 000744fc:35ce2078	t6=$00552078
		//	ori		t7, t7, $031d		# 00074500:35ef031d	t7=$b900031d
		//	sw		t7, $0000(v0)		# 00074504:ac4f0000	
		//	sw		t6, $0004(v0)		# 00074508:ac4e0004	
		//	lw		v0, $0000(t0)		# 0007450c:8d020000	
		//	lui		t7, $0002		# 00074510:3c0f0002	t7=$00020000
		//	ori		t7, t7, $2001		# 00074514:35ef2001	t7=$00022001
		//	addiu		t9, v0, $0008		# 00074518:24590008	
		//	sw		t9, $0000(t0)		# 0007451c:ad190000	
		//	lui		t8, $b700		# 00074520:3c18b700	t8=$b7000000
		//	sw		t8, $0000(v0)		# 00074524:ac580000	
		//	sw		t7, $0004(v0)		# 00074528:ac4f0004	
		//	lw		ra, $0024(sp)		# 0007452c:8fbf0024	
		//	addiu		sp, sp, $0028		# 00074530:27bd0028	
		//	jr		ra			# 00074534:03e00008	
		//	nop					# 00074538:00000000	
	}

	// RAM GREECE
	void fnc0007453c() {
		//fnc0007c428();
		//N64.fnc0001cc6c();
		//fnc00076a58();
		//fnc000773f4();
		//fnc000773f4();
	}

	// RAM GREECE
	void fnc00074998() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074a0c() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074a8c() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074b0c() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074b98() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074c18() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074c8c() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074d18() {
		//fnc0007453c();
	}

	// RAM GREECE
	void fnc00074d98() {
		//N64.fnc0000726c();
		//fnc00084eec();
		//fnc00084eec();
		//fnc00084eec();
		//fnc00084eec();
	}

	// RAM GREECE
	void fnc00074ff0() {
		//fnc0007c428();
		//fnc00076a58();
		//fnc000773f4();
		//fnc000773f4();
		//fnc000773f4();
	}

	// RAM GREECE
	void fnc0007568c() {
		//fnc00074c8c();
		//fnc00074b0c();
		//fnc00074a8c();
		//fnc00074b98();
		//fnc00074c18();
		//fnc00074998();
		//fnc00074a0c();
		//fnc00074d18();
		//fnc0007c428();
		//fnc0007f8f4();
		//fnc0007c428();
		//fnc000773f4();
		//fnc00076a58();
		//fnc000773f4();
		//fnc000773f4();
		//fnc000773f4();
		//fnc000768b8();
		//fnc00076678();
		//fnc00076538();
		//fnc00073714();
		//fnc000773f4();
		//fnc0008b53c();
		//fnc000773f4();
	}

	// RAM GREECE
	void fnc00076538() {
		//fnc00073714();
	}

	// RAM GREECE
	void fnc00076678() {
		//fnc00073714();
		//fnc00073714();
	}

	// RAM GREECE
	void fnc000768b8() {
		//fnc00073714();
	}

	// RAM GREECE
	void fnc00076a58() {
		//N64.fnc0001bbb0();
		//fnc00076c08();
		//fnc00077010();
	}

	// RAM GREECE
	void fnc00076c08() {
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
	}

	// RAM GREECE
	void fnc00077010() {
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
	}

	// RAM GREECE
	void fnc000773f4() {
		//fnc00076c08();
	}

	// RAM GREECE
	void fnc000774e0() {
	}

	// RAM GREECE
	void fnc00077580() {
	}

	// RAM GREECE
	void fnc000775f0() {
		//fnc000858f4();
		//fnc00085984();
	}

	// RAM GREECE
	void fnc0007774c() {
		//fnc00084c68();
		//fnc0008506c();
		//fnc0008506c();
		//fnc00084eec();
		//fnc00089648();
		//fnc00089648();
	}

	// RAM GREECE
	void fnc00077a5c() {
		//fnc00086e90();
		//fnc00086f58();
		//fnc00086f24();
		//fnc00089794();
	}

	// RAM GREECE
	void fnc00077b40() {
		//fnc0007774c();
		//fnc00077a5c();
	}

	// RAM GREECE
	void fnc00077b94() {
		//fnc0007d52c();
		//N64.fnc0000726c();
		//fnc0007a8ac();
		//N64.fnc0000726c();
		//fnc00077b40();
		//fnc000775f0();
		//N64.fnc00015388();
		//fnc000787e8();
		//N64.fnc0000726c();
		//N64.fnc00014a3c();
		//N64.fnc00014a3c();
		//N64.fnc00014a3c();
		//fnc000787e8();
		//N64.fnc00014a3c();
		//fnc000787e8();
		//N64.fnc00014a3c();
		//fnc000787e8();
		//N64.fnc000153d8();
		//fnc000787e8();
		//fnc000787e8();
	}

	// RAM GREECE
	void fnc000784b8() {
		//N64.fnc0000726c();
		//N64.fnc000153d8();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//N64.fnc000073b8();
		//N64.fnc00014a3c();
		//N64.fnc0000726c();
		//N64.fnc00014a3c();
		//N64.fnc0000726c();
	}

	// RAM GREECE
	void fnc000787e8() {
		//N64.fnc0001cc6c("Give Obj Contents\n");
		//N64.fnc0001cc6c("startBookIndex = %d\n");
		//N64.fnc00018d7c();
		//fnc0007a8ac();
	}

	// RAM GREECE
	void fnc00078994() {
	}

	// RAM GREECE
	void fnc0007899c() {
	}

	// RAM GREECE
	void fnc00078ad4() {
	}

	// RAM GREECE
	void fnc00078d24() {
	}

	// RAM GREECE
	void fnc00078d68() {
		//N64.ButtonIsNewlyPressed();
		//fnc00078ad4();
		//fnc0007a414();
		//fnc0007a370();
		//fnc0007a168();
		//fnc0007c2d0();
		//fnc0007899c();
		//N64.fnc0001cc6c("NO SEARCH\n");
		//N64.fnc000137e0();
		//N64.fnc0000726c();
		//fnc0007d548();
		//fnc0007d548();
		//N64.fnc000137d8();
	}

	// RAM GREECE
	void fnc00079304() {
	}

	// RAM GREECE
	void fnc00079310() {
	}

	// RAM GREECE
	void fnc00079330() {
		//N64.fnc0000345c();
		//N64.fnc0001cc6c("Active Debug Object:%d\n");
		//N64.fnc0000345c();
		//N64.fnc0001cc6c("Active Debug Object:%d\n");
		//N64.fnc0000345c();
		//fnc00079c4c();
		//fnc0007978c();
		//fnc00079954();
		//fnc00079e50();
		//fnc00079658();
		//fnc000794bc();
	}

	// RAM GREECE
	void fnc000794bc() {
		//N64.fnc0001cc6c("Changed Debug State To CHANGE OBJ WALKTO POS\n");
		//N64.fnc0001cc6c("WalkToXOff:%d WalkToZOff:%d\n");
		//N64.fnc0001cc6c("WalkToXOff:%d WalkToZOff:%d\n");
		//N64.fnc0001cc6c("WalkToXOff:%d WalkToZOff:%d\n");
		//N64.fnc0001cc6c("WalkToXOff:%d WalkToZOff:%d\n");
	}

	// RAM GREECE
	void fnc00079658() {
		//N64.fnc0001cc6c("Changed Debug State To CHANGE DOOR WALKTO POS\n");
		//N64.fnc0001cc6c("WalkToXPos:%d WalkToZPos:%d\n");
		//N64.fnc0001cc6c("WalkToXPos:%d WalkToZPos:%d\n");
		//N64.fnc0001cc6c("WalkToXPos:%d WalkToZPos:%d\n");
		//N64.fnc0001cc6c("WalkToXPos:%d WalkToZPos:%d\n");
	}

	// RAM GREECE
	void fnc0007978c() {
		//N64.fnc0001cc6c("Changed Debug State To MAIN BOX COLL\n");
		//N64.fnc0001cc6c("Obj:%d Width:%d Depth:%d\n");
		//N64.fnc0001cc6c("Obj:%d Width:%d Depth:%d\n");
		//N64.fnc0001cc6c("Obj:%d Width:%d Depth:%d\n");
		//N64.fnc0001cc6c("Obj:%d Width:%d Depth:%d\n");
	}

	// RAM GREECE
	void fnc00079954() {
		//N64.fnc0001cc6c("Changed Debug State To SUB BOX COLL\n");
		//N64.fnc0001cc6c("Obj:%d SubWidth:%d SubDepth:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubWidth:%d SubDepth:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubWidth:%d SubDepth:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubWidth:%d SubDepth:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubXOff:%d SubZOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubXOff:%d SubZOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubXOff:%d SubZOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d SubXOff:%d SubZOff:%d\n");
	}

	// RAM GREECE
	void fnc00079c4c() {
		//N64.fnc0001cc6c("Changed Debug State To PAD\n");
		//N64.fnc0000345c();
		//N64.fnc0001cc6c("Obj:%d PAD RESET\n");
		//N64.fnc0001cc6c("Obj:%d Offset:%d Width:%d\n");
		//N64.fnc0001cc6c("Obj:%d Offset:%d Width:%d\n");
		//N64.fnc0001cc6c("Obj:%d Offset:%d Width:%d\n");
		//N64.fnc0001cc6c("Obj:%d Offset:%d Width:%d\n");
	}

	// RAM GREECE
	void fnc00079e50() {
		//N64.fnc0001cc6c("Changed Debug State To GFX Off Change\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d YOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d YOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d XOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d XOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d ZOff:%d\n");
		//N64.fnc0001cc6c("Obj:%d ID:%d ZOff:%d\n");
		//fnc00077b40();
		//fnc00077b40();
	}

	// RAM GREECE
	void fnc0007a168() {
		//fnc000774e0();
		//fnc0007c3c0();
		//fnc0007c2d0();
	}

	// RAM GREECE
	void fnc0007a370() {
	}

	// RAM GREECE
	void fnc0007a3b4() {
	}

	// RAM GREECE
	void fnc0007a3d0() {
	}

	// RAM GREECE
	void fnc0007a3ec() {
	}

	// RAM GREECE
	void fnc0007a408() {
	}

	// RAM GREECE
	void fnc0007a414() {
		//N64.fnc0001cc6c("ERROR: Invalid Base Rot\n");
		//fnc0007c3c0();
	}

	// RAM GREECE
	void fnc0007a618() {
	}

	// RAM GREECE
	void fnc0007a634() {
	}

	// RAM GREECE
	void fnc0007a6b8() {
	}

	// RAM GREECE
	void fnc0007a6dc() {
	}

	// RAM GREECE
	void fnc0007a760() {
	}

	// RAM GREECE
	void fnc0007a784() {
	}

	// RAM GREECE
	void fnc0007a7f8() {
	}

	// RAM GREECE
	void fnc0007a818() {
	}

	// RAM GREECE
	void fnc0007a88c() {
	}

	// RAM GREECE
	void fnc0007a8ac() {
		//fnc00071304();
		//fnc0007b2f0();
		//fnc0007a634();
		//fnc0007a6dc();
		//N64.fnc0001cc6c("PowerUp:%d, ObjSearchIndex=%d \n");
		//N64.fnc0001cc6c("AlienArtefacts=%d \n");
		//N64.fnc0001cc6c("EnteredRoom=%d \n");
		//fnc0007a784();
		//fnc0007a818();
		//fnc0007b1e0();
		//N64.fnc00008c44();
		//N64.fnc0001cc6c("\n\n\n GIVING DELAYED POWERUP TYPE=%d\n");
		//fnc0008dc44();
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//fnc0007b1e0();
		//fnc0008dcf4();
		//N64.fnc00008478();
		//N64.fnc000153d8();
		//N64.fnc000137e0();
	}

	// RAM GREECE
	void fnc0007ae40() {
		//N64.fnc0001cc6c("Get Contents\n");
		//N64.fnc00008478();
		//N64.fnc0001cc6c("Going Into Cutscene\n");
		//N64.fnc0000726c();
		//fnc00089648();
		//fnc00089648();
		//N64.fnc00014a3c();
	}

	// RAM GREECE
	void fnc0007b124() {
		//fnc00080168();
		//fnc00082b04();
		//N64.fnc0000851c();
		//N64.fnc00018d7c();
		//fnc0007ae40();
	}

	// RAM GREECE
	void fnc0007b1e0() {
	}

	// RAM GREECE
	void fnc0007b2f0() {
		//N64.fnc0000726c();
		//N64.fnc000073b8();
		//N64.fnc000072cc();
		//N64.fnc000072cc();
		//fnc0007b51c();
		//N64.fnc000073b8();
		//N64.fnc000072cc();
		//N64.fnc000073b8();
		//N64.fnc0001cc6c("Invalid Switch ID\n");
	}

	// RAM GREECE
	void fnc0007b51c() {
		//N64.fnc0000726c();
		//N64.fnc0000726c();
		//N64.fnc000072cc();
		//N64.fnc000073b8();
		//fnc00086f24();
		//fnc00086f24();
		//fnc00086f24();
		//fnc00086f24();
	}

	// RAM GREECE
	void fnc0007b65c() {
		//fnc0007bec8();
		//fnc000774e0();
		//fnc0007bec8();
		//fnc0007bc18();
		//fnc0007bec8();
	}

	// RAM GREECE
	void fnc0007bc18() {
	}

	// RAM GREECE
	void fnc0007bc74() {
	}

	// RAM GREECE
	void fnc0007bd04() {
	}

	// RAM GREECE
	void fnc0007bd98() {
	}

	// RAM GREECE
	void fnc0007be30() {
	}

	// RAM GREECE
	void fnc0007bec8() {
		//fnc0007c1dc();
		//fnc0007c1dc();
		//fnc0007c1dc();
		//fnc0007c1dc();
	}

	// RAM GREECE
	void fnc0007c1dc() {
	}

	// RAM GREECE
	void fnc0007c224() {
	}

	// RAM GREECE
	void fnc0007c2c4() {
	}

	// RAM GREECE
	void fnc0007c2d0() {
		//N64.fnc00003824();
	}

	// RAM GREECE
	/// If returns true Adam interacts with the object in front of him
	bool fnc0007c3c0() {
	}

	// RAM GREECE
	void fnc0007c418() {
	}

	// RAM GREECE
	void fnc0007c420() {
	}

	// RAM GREECE
	void fnc0007c428() {
		//N64.fnc0001d940();
		//N64.fnc00003824();
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
	}

	// RAM GREECE
	void fnc0007c698() {
	}

	// RAM GREECE
	void fnc0007c7d4() {
	}

	/// Possible file boundary

	// RAM GREECE
	void fnc0007c7e0() {
		//N64.fnc0001cc6c("ALLOCATE 2 PLAYER BUFFERS:\n");
		//N64.guess_allocateCharacterBuffer();
		//N64.guess_allocateCharacterBuffer();
		//N64.fnc0000c790();
		//fnc0007daa8();
	}

	// RAM GREECE
	void fnc0007c8bc() {
		//N64.fnc0000c764();
		//N64.fnc0000c764();
	}

	// RAM GREECE
	void fnc0007c8fc() {
		//fnc0007dda0();
		//fnc0007caa8();
	}

	// RAM GREECE
	void fnc0007c93c() {
		//fnc0007eb1c();
		//fnc0007efd4();
	}

	// RAM GREECE
	void fnc0007c96c() {
		//N64.fnc0001d940();
	}

	// RAM GREECE
	void fnc0007caa8() {
		//N64.fnc00006dac();
		//N64.fnc0001d940();
		//N64.fnc0001e7b0();
		//N64.fnc0001e5f0();
		//N64.fnc0001e5f0();
		//N64.fnc0001e7b0();
		//N64.fnc00003824();
		//fnc0007d37c();
		//N64.fnc0001e7b0();
		//N64.fnc0001e5f0();
		//N64.fnc0001e5f0();
		//N64.fnc0001e7b0();
		//N64.fnc0001d940();
		//N64.fnc0001e5f0();
		//N64.fnc0001e7b0();
		//N64.fnc0001e5f0();
		//N64.fnc0001e7b0();
		//fnc0007b65c();
		//fnc00070294();
		//fnc0007b65c();
		//fnc0007b65c();
		//N64.ButtonIsNewlyPressed();
		//N64.fnc00018a58();
	}

	// RAM GREECE
	void fnc0007d37c() {
		//fnc0007daa8();
		//fnc0007daa8();
	}

	// RAM GREECE
	void fnc0007d52c() {
	}

	// RAM GREECE
	void fnc0007d548() {
		//fnc0007daa8();
		//N64.fnc00003824();
	}

	// RAM GREECE
	/// Find search animation
	void fnc0007d62c() {
		//N64.fnc0001cc6c("ERROR: could not find search animation for object %d. Using SEARCH_MED\n");
	}

	// RAM 0007d69c
	void inSearchObject() {
		//fnc0007daa8();
		//fnc0007d37c();
		//N64.fnc0001cc6c("New");
		//N64.fnc0001cc6c();
		//N64.fnc0001cc6c();
		//N64.fnc0001cc6c();
		//fnc0007d62c();
		//N64.fnc0001cc6c("For obj=%d style = %d,  search anim is %s\n");
		//fnc0007daa8();
		//N64.fnc0001cc6c("Call Doug - inSearchObject() NOW!\n");
		//fnc0007b124();
		//fnc0007a618();
	}

	// RAM GREECE
	void fnc0007daa8() {
		//N64.fnc0000d71c();
		//N64.fnc0000cdfc();
	}

	// RAM GREECE
	void fnc0007db98() {
		//fnc0007daa8();
		//fnc0007daa8();
	}

	// RAM GREECE
	void fnc0007dc80() {
		//fnc0007daa8();
		//fnc0007daa8();
	}

	// RAM GREECE
	void fnc0007dda0() {
		//fnc0007daa8();
		//N64.fnc0000cf4c();
		//fnc00079304();
		//N64.fnc00005aec();
		//fnc0007d52c();
		//N64.fnc00005b30();
		//fnc00081a18();
		//fnc00081a24();
		//fnc00081e08();
		//fnc0007daa8();
		//fnc0007daa8();
		//fnc00081e90();
		//N64.fnc00005aec();
		//N64.fnc00005b30();
		//fnc0007b124();
		//fnc0007daa8();
		//N64.fnc000153d8();
		//fnc00081aa8();
		//fnc0007daa8();
		//fnc0008ddc0();
		//inSearchObject();
		//fnc0007d52c();
		//fnc0007daa8();
		//fnc0007daa8();
		//fnc0007d52c();
		//fnc000703d0();
		//N64.fnc00003824();
		//fnc0007daa8();
		//fnc0007d37c();
		//N64.fnc0001cc6c("Turn to door\n");
		//fnc0007daa8();
		//fnc0007daa8();
		//fnc0007daa8();
		//N64.fnc0001a068();
		//fnc0007d52c();
		//fnc0007db98();
		//fnc0007daa8();
		//N64.fnc0000726c();
		//fnc0007dc80();
		//N64.fnc0000d8dc();
		//N64.fnc0000cf4c();
		//N64.fnc000153d8();
		//N64.fnc000038e0();
		//N64.fnc00014a3c();
	}

	// RAM GREECE
	void fnc0007eb1c() {
		//fnc000717a8();
	}

	// RAM GREECE
	void fnc0007efd4() {
		//N64.fnc0001cc6c("ouch\n");
		//N64.fnc000039d0();
		//N64.fnc0000c81c();
		//N64.fnc00012000();
		//N64.fnc0000cc3c();
		//N64.fnc000039d0();
		//N64.fnc000039d0();
		//N64.fnc000039d0();
		//N64.fnc000039d0();
		//N64.fnc000039d0();
		//N64.fnc000039d0();
	}

	// RAM 0007f668
	void guess_allocateTwoCharacterBuffers(byte a0)
	{
		//	addiu		sp, sp, $ffd8		# 0007f668:27bdffd8	
		//	sw		s0, $0018(sp)		# 0007f66c:afb00018	
		//	sw		a1, $002c(sp)		# 0007f670:afa5002c	
		//	andi		a2, a0, $00ff		# 0007f674:308600ff	
		//	lbu		t6, $002f(sp)		# 0007f678:93ae002f	
		//	lui		s0, $800e		# 0007f67c:3c10800e	s0=$800e0000
		//	sw		a0, $0028(sp)		# 0007f680:afa40028	
		//	addiu		s0, s0, $6ad8		# 0007f684:26106ad8	s0=$800e6ad8
		//	sw		ra, $001c(sp)		# 0007f688:afbf001c	
		//	addiu		t7, a2, $ffff		# 0007f68c:24cfffff	
		//	lui		a0, $800a		# 0007f690:3c04800a	a0=$800a0000
		//	sb		t7, $0426(s0)		# 0007f694:a20f0426	[800e6efe]
		x800e6ad8 = a0 - 1;
		//	addiu		a0, a0, $4ce8		# 0007f698:24844ce8	a0="ALLOCATE 2 CHARACTER BUFFERS\n"
		//	sw		a2, $0024(sp)		# 0007f69c:afa60024	
		//	jal		$0001cc6c		# 0007f6a0:0c00731b	^ FNC_0001cc6c
		//	sb		t6, $0425(s0)		# 0007f6a4:a20e0425	[800e6efd]
		x800e6efd = 0; /// TODO loads from SP
		N64.fnc0001cc6c("ALLOCATE 2 CHARACTER BUFFERS\n");
		//	jal		$0000c6f4		# 0007f6a8:0c0031bd	^ FNC_0000c6f4
		//	nop					# 0007f6ac:00000000	
		//	jal		$0000c6f4		# 0007f6b0:0c0031bd	^ FNC_0000c6f4
		//	sw		v0, $0404(s0)		# 0007f6b4:ae020404	[800e6edc]
		x800e6edc = N64.guess_allocateCharacterBuffer();
		x800e6ee0 = N64.guess_allocateCharacterBuffer();
		//	lw		t8, $0024(sp)		# 0007f6b8:8fb80024	
		//	lbu		t0, $002f(sp)		# 0007f6bc:93a8002f	
		//	lui		at, $3f80		# 0007f6c0:3c013f80	at=$3f800000
		//	sll		t9, t8, 2		# 0007f6c4:0018c880	
		//	subu		t9, t9, t8		# 0007f6c8:0338c823	
		//	sll		t9, t9, 2		# 0007f6cc:0019c880	
		//	addu		t9, t9, t8		# 0007f6d0:0338c821	
		//	sll		t9, t9, 4		# 0007f6d4:0019c900	
		//	lui		t3, $800a		# 0007f6d8:3c0b800a	t3=$800a0000
		//	sll		t1, t0, 4		# 0007f6dc:00084900	
		//	mtc1		at, $f4			# 0007f6e0:44812000	
		//	addu		t2, t9, t1		# 0007f6e4:03295021	
		//	addiu		t3, t3, $e4c8		# 0007f6e8:256be4c8	t3=$8009e4c8
		//	addu		v1, t2, t3		# 0007f6ec:014b1821	
		//	sw		v0, $0408(s0)		# 0007f6f0:ae020408	[800e6ee0]
		//	lw		a1, $ff34(v1)		# 0007f6f4:8c65ff34	
		//	lbu		a2, $ff3c(v1)		# 0007f6f8:9066ff3c	
		//	or		a0, s0, zero		# 0007f6fc:02002025	a0=$800e6ad8
		//	jal		$0000c790		# 0007f700:0c0031e4	^ FNC_0000c790
		//	swc1		$f4, $0410(s0)		# 0007f704:e6040410	[800e6ee8]
		npcAnimationSpeed = 1f;
		N64.fnc0000c790();
		//	lw		t4, $0404(s0)		# 0007f708:8e0c0404	t4=$800e6edc
		//	sw		zero, $0e50(t4)		# 0007f70c:ad800e50	[800554d0]
		x800554d0 = 0;
		//	lw		ra, $001c(sp)		# 0007f710:8fbf001c	
		//	lw		s0, $0018(sp)		# 0007f714:8fb00018	
		//	addiu		sp, sp, $0028		# 0007f718:27bd0028	
		//	jr		ra			# 0007f71c:03e00008	
		//	nop					# 0007f720:00000000	
	}

	// RAM GREECE
	void fnc0007f724() {
		//N64.fnc0000c764();
		//N64.fnc0000c764();
	}

	// RAM GREECE
	void fnc0007f778() {
		//fnc0007daa8();
		//N64.fnc0000cf4c();
	}

	// RAM GREECE
	void fnc0007f878() {
		//N64.fnc0000cf4c();
	}

	// RAM GREECE
	void fnc0007f8f4() {
		//N64.fnc0000c81c();
		//N64.fnc0000c81c();
		//N64.fnc0000cc3c();
	}

	/// Possible file boundary

	// RAM GREECE
	void fnc0007fbd0() {
		//fnc000808d0();
	}

	// RAM GREECE
	/// Do inside camera
	void fnc0007fc74()
	{
		//	lui		v0, $800e		# 0007fc74:3c02800e	v0=$800e0000
		//	lw		v0, $65a8(v0)		# 0007fc78:8c4265a8	v0=$800e65a8
		int v0 = x800e65a8;
		int v1;
		//	addiu		sp, sp, $ffa8		# 0007fc7c:27bdffa8	
		//	addiu		t6, zero, $0004		# 0007fc80:240e0004	t6=$00000004
		//	lui		at, $8004		# 0007fc84:3c018004	at=$80040000
		//	andi		t7, v0, $0080		# 0007fc88:304f0080	
		//	sw		ra, $002c(sp)		# 0007fc8c:afbf002c	
		//	bne		t7, zero, $0007fca4	# 0007fc90:15e00004	v __0007fca4
		//	sb		t6, $7f80(at)		# 0007fc94:a02e7f80	[80047f80]
		x80047f80 = 4;
		//	andi		t8, v0, $0040		# 0007fc98:30580040	
		//	beq		t8, zero, $0007fcd0	# 0007fc9c:1300000c	v __0007fcd0
		//	lui		t3, $800e		# 0007fca0:3c0b800e	t3=$800e0000
		if ((x800e65a8 & 0x80) != 0 && (x800e65a8 & 0x40) != 0)
		{
			//__0007fca4:					# 
			//	jal		$000703ec		# 0007fca4:0c01c0fb	^ FNC_000703ec
			//	nop					# 0007fca8:00000000	
			int result = fnc000703ec();
			//	addiu		at, zero, $0004		# 0007fcac:24010004	at=$00000004
			//	beq		v0, at, $0007fcc4	# 0007fcb0:10410004	v __0007fcc4
			//	lui		v1, $800e		# 0007fcb4:3c03800e	v1=$800e0000
			if (result != 4)
			{
				//	addiu		t9, zero, $0001		# 0007fcb8:24190001	t9=$00000001
				//	lui		at, $800e		# 0007fcbc:3c01800e	at=$800e0000
				//	sb		t9, $73df(at)		# 0007fcc0:a03973df	[800e73df]
				x800e73df = 1;
			}
			//__0007fcc4:					# 
			//	lbu		v1, $73df(v1)		# 0007fcc4:906373df	v1=$800e73df
			v1 = x800e73df;
			//	beq		zero, zero, $0007fd4c	# 0007fcc8:10000020	v __0007fd4c
			//	or		v0, v1, zero		# 0007fccc:00601025	
			v0 = x800e73df;
		}
		else
		{
			//__0007fcd0:					# 
			//	lw		t3, $7398(t3)		# 0007fcd0:8d6b7398	t3=$800e7398
			//	lui		t4, $8003		# 0007fcd4:3c0c8003	t4=$80030000
			//	beq		t3, zero, $0007fd14	# 0007fcd8:1160000e	v __0007fd14
			//	nop					# 0007fcdc:00000000	
			//	lw		t4, $4484(t4)		# 0007fce0:8d8c4484	t4=$80034484
			//	bne		t4, zero, $0007fd14	# 0007fce4:1580000b	v __0007fd14
			//	nop					# 0007fce8:00000000	
			//	jal		$0001a114		# 0007fcec:0c006845	^ FNC_0001a114
			v0 = N64.fnc0001a114();
			//	nop					# 0007fcf0:00000000	
			//	addiu		at, zero, $00ff		# 0007fcf4:240100ff	at=$000000ff
			//	beq		v0, at, $0007fd14	# 0007fcf8:10410006	v __0007fd14
			//	addiu		t5, zero, $0003		# 0007fcfc:240d0003	t5=$00000003
			if (x800e7398 != 0 && x80034484 == 0 && v0 != 0xff)
			{
				//	lui		at, $800e		# 0007fd00:3c01800e	at=$800e0000
				//	addiu		v1, zero, $0003		# 0007fd04:24030003	v1=$00000003
				v1 = 3;
				//	or		v0, v1, zero		# 0007fd08:00601025	v0=$00000003
				v0 = 3;
				//	beq		zero, zero, $0007fd4c	# 0007fd0c:1000000f	v __0007fd4c
				//	sb		t5, $73df(at)		# 0007fd10:a02d73df	[800e73df]
				x800e73df = 3;
			}
			else if (x800e73df != 2 && x800e73df != 5 && x800e73df != 6)
			{
				//__0007fd14:					# 
				//	lui		v1, $800e		# 0007fd14:3c03800e	v1=$800e0000
				//	lbu		v1, $73df(v1)		# 0007fd18:906373df	v1=$800e73df
				//	addiu		at, zero, $0002		# 0007fd1c:24010002	at=$00000002
				//	beq		v1, at, $0007fd4c	# 0007fd20:1061000a	v __0007fd4c
				//	or		v0, v1, zero		# 0007fd24:00601025	
				//	addiu		at, zero, $0005		# 0007fd28:24010005	at=$00000005
				//	beq		v0, at, $0007fd4c	# 0007fd2c:10410007	v __0007fd4c
				//	addiu		at, zero, $0006		# 0007fd30:24010006	at=$00000006
				//	beq		v0, at, $0007fd4c	# 0007fd34:10410005	v __0007fd4c
				//	lui		t6, $8004		# 0007fd38:3c0e8004	t6=$80040000
				//	lbu		v0, $7f80(t6)		# 0007fd3c:91c27f80	v0=$80047f80
				//	lui		at, $800e		# 0007fd40:3c01800e	at=$800e0000
				//	sb		v0, $73df(at)		# 0007fd44:a02273df	[800e73df]
				v0 = x80047f80;
				x800e73df = x80047f80;
				//	or		v1, v0, zero		# 0007fd48:00401825	
				v1 = v0;
			}
			else
			{
				v0 = x800e73df;
				v1 = x800e73df;
			}
		}
		//__0007fd4c:					# 
		//	lui		t7, $800e		# 0007fd4c:3c0f800e	t7=$800e0000
		//	lbu		t7, $73de(t7)		# 0007fd50:91ef73de	t7=$800e73de
		//	addiu		at, zero, $0001		# 0007fd54:24010001	at=$00000001
		//	bne		t7, at, $0007fd7c	# 0007fd58:15e10008	v __0007fd7c
		//	addiu		at, zero, $0004		# 0007fd5c:24010004	at=$00000004
		//	bnel		v0, at, $0007fd80	# 0007fd60:54410007	v __0007fd80
		//	addiu		t8, v0, $ffff		# 0007fd64:2458ffff	
		if (x800e73de == 1 && v0 == 4)
		{
			//	jal		$000808d0		# 0007fd68:0c020234	v FNC_000808d0
			//	nop					# 0007fd6c:00000000	
			fnc000808d0();
			//	lui		v1, $800e		# 0007fd70:3c03800e	v1=$800e0000
			//	lbu		v1, $73df(v1)		# 0007fd74:906373df	v1=$800e73df
			v1 = x800e73df;
			//	or		v0, v1, zero		# 0007fd78:00601025	
			v0 = x800e73df;
			//__0007fd7c:					# 
		}
		int t8 = v0 - 1;
		//	addiu		t8, v0, $ffff		# 0007fd7c:2458ffff	
		//__0007fd80:					# 
		//	sltiu		at, t8, $0006		# 0007fd80:2f010006	
		//	beq		at, zero, $0007fe1c	# 0007fd84:10200025	v __0007fe1c
		//	sll		t8, t8, 2		# 0007fd88:0018c080	
		if (t8 < 6)
		{
			//	lui		at, $800a		# 0007fd8c:3c01800a	at=$800a0000
			//	addu		at, at, t8		# 0007fd90:00380821	
			//	lw		t8, $4f08(at)		# 0007fd94:8c384f08	
			//	jr		t8			# 0007fd98:03000008	
			//	nop					# 0007fd9c:00000000	
			switch (t8)
			{
				default:
					break;
				case 2:
					//	jal		$000804e0		# 0007fda0:0c020138	v FNC_000804e0
					//	nop					# 0007fda4:00000000	
					fnc000804e0();
					//	lui		v1, $800e		# 0007fda8:3c03800e	v1=$800e0000
					//	beq		zero, zero, $0007fe1c	# 0007fdac:1000001b	v __0007fe1c
					//	lbu		v1, $73df(v1)		# 0007fdb0:906373df	v1=$800e73df
					v1 = x800e73df;
					break;
				case 0:
					//	jal		$000806f8		# 0007fdb4:0c0201be	v FNC_000806f8
					//	nop					# 0007fdb8:00000000	
					fnc000806f8();
					//	lui		v1, $800e		# 0007fdbc:3c03800e	v1=$800e0000
					//	beq		zero, zero, $0007fe1c	# 0007fdc0:10000016	v __0007fe1c
					//	lbu		v1, $73df(v1)		# 0007fdc4:906373df	v1=$800e73df
					v1 = x800e73df;
					break;
				case 3:
					//	lui		t9, $800e		# 0007fdc8:3c19800e	t9=$800e0000
					//	lw		t9, $65a8(t9)		# 0007fdcc:8f3965a8	t9=$800e65a8
					//	andi		t3, t9, $0002		# 0007fdd0:332b0002	
					//	bne		t3, zero, $0007fe1c	# 0007fdd4:15600011	v __0007fe1c
					//	nop					# 0007fdd8:00000000	
					if ((x800e65a8 & 2) != 0)
					{
						break;
					}
					//	jal		$00080a38		# 0007fddc:0c02028e	v FNC_00080a38
					//	nop					# 0007fde0:00000000	
					fnc00080a38();
					//	lui		v1, $800e		# 0007fde4:3c03800e	v1=$800e0000
					//	beq		zero, zero, $0007fe1c	# 0007fde8:1000000c	v __0007fe1c
					//	lbu		v1, $73df(v1)		# 0007fdec:906373df	v1=$800e73df
					v1 = x800e73df;
					break;
				case 1:
					//	jal		$00080770		# 0007fdf0:0c0201dc	v FNC_00080770
					//	nop					# 0007fdf4:00000000	
					fnc00080770();
					goto case;
				case 4:
					//	jal		$00081764		# 0007fdf8:0c0205d9	v FNC_00081764
					//	nop					# 0007fdfc:00000000	
					DebugManualCameraControl();
					//	lui		v1, $800e		# 0007fe00:3c03800e	v1=$800e0000
					//	beq		zero, zero, $0007fe1c	# 0007fe04:10000005	v __0007fe1c
					//	lbu		v1, $73df(v1)		# 0007fe08:906373df	v1=$800e73df
					v1 = x800e73df;
					break;
				case 5:
					//	jal		$00081b58		# 0007fe0c:0c0206d6	v FNC_00081b58
					//	nop					# 0007fe10:00000000	
					fnc00081b58();
					//	lui		v1, $800e		# 0007fe14:3c03800e	v1=$800e0000
					//	lbu		v1, $73df(v1)		# 0007fe18:906373df	v1=$800e73df
					v1 = x800e73df;
			}
		}
		//__0007fe1c:					# 
		//	lui		t4, $800a		# 0007fe1c:3c0c800a	t4=$800a0000
		//	lbu		t4, $0968(t4)		# 0007fe20:918c0968	t4=$800a0968
		//	lui		at, $800a		# 0007fe24:3c01800a	at=$800a0000
		//	lui		v0, $8009		# 0007fe28:3c028009	v0=$80090000
		//	sb		t4, $096c(at)		# 0007fe2c:a02c096c	[800a096c]
		x800a096c = x800a0968;
		//	lui		at, $800e		# 0007fe30:3c01800e	at=$800e0000
		//	sb		v1, $73de(at)		# 0007fe34:a02373de	[800e73de]
		x800e73de = cast(byte)v1;
		//	addiu		v0, v0, $ddf4		# 0007fe38:2442ddf4	v0=$8008ddf4
		//	lui		at, $800e		# 0007fe3c:3c01800e	at=$800e0000
		//	lwc1		$f2, $659c(at)		# 0007fe40:c422659c	[800e659c]
		//	lwc1		$f0, $0000(v0)		# 0007fe44:c4400000	[8008ddf4]
		//	lui		v1, $8009		# 0007fe48:3c038009	v1=$80090000
		//	addiu		v1, v1, $ddfc		# 0007fe4c:2463ddfc	v1=$8008ddfc
		//	c.eq.s		$f2, $f0		# 0007fe50:46001032	
		//	lui		at, $800e		# 0007fe54:3c01800e	at=$800e0000
		//	bc1f		$0007fe98		# 0007fe58:4500000f	v __0007fe98
		//	nop					# 0007fe5c:00000000	
		if (x800e659c == x8008ddf4)
		{
			//	lwc1		$f12, $0000(v1)		# 0007fe60:c46c0000	[8008ddfc]
			//	lwc1		$f4, $65a4(at)		# 0007fe64:c42465a4	[800e65a4]
			//	lui		at, $4120		# 0007fe68:3c014120	at=$41200000
			//	c.eq.s		$f4, $f12		# 0007fe6c:460c2032	
			//	nop					# 0007fe70:00000000	
			//	bc1f		$0007fe98		# 0007fe74:45000008	v __0007fe98
			//	nop					# 0007fe78:00000000	
			if (x800e65a4 == x8008ddfc)
			{
				//	mtc1		at, $f14		# 0007fe7c:44817000	
				//	nop					# 0007fe80:00000000	
				//	sub.s		$f6, $f0, $f14		# 0007fe84:460e0181	
				//	sub.s		$f8, $f12, $f14		# 0007fe88:460e6201	
				//	swc1		$f6, $0000(v0)		# 0007fe8c:e4460000	[8008ddf4]
				x8008ddf4 -= 10f;
				//	lwc1		$f0, $0000(v0)		# 0007fe90:c4400000	[8008ddf4]
				//	swc1		$f8, $0000(v1)		# 0007fe94:e4680000	[8008ddfc]
				x8008ddfc -= 10f;
			}
		}
		
		//__0007fe98:					# 
		//	lui		v1, $8009		# 0007fe98:3c038009	v1=$80090000
		//	addiu		v1, v1, $ddfc		# 0007fe9c:2463ddfc	v1=$8008ddfc
		//	lui		at, $800e		# 0007fea0:3c01800e	at=$800e0000
		//	sub.s		$f14, $f2, $f0		# 0007fea4:46001381	
		//	lwc1		$f10, $65a4(at)		# 0007fea8:c42a65a4	[800e65a4]
		//	lwc1		$f18, $0000(v1)		# 0007feac:c4720000	[8008ddfc]
		//	mul.s		$f4, $f14, $f14		# 0007feb0:460e7102	
		//	sub.s		$f16, $f10, $f18	# 0007feb4:46125401	
		//	swc1		$f14, $0050(sp)		# 0007feb8:e7ae0050	
		//	mul.s		$f6, $f16, $f16		# 0007febc:46108182	
		//	swc1		$f16, $004c(sp)		# 0007fec0:e7b0004c	
		//	jal		$0001d940		# 0007fec4:0c007650	^ FNC_0001d940
		//	add.s		$f12, $f4, $f6		# 0007fec8:46062300	
		N64.sqrtf();
		//	lui		t5, $800e		# 0007fecc:3c0d800e	t5=$800e0000
		//	lw		t5, $7398(t5)		# 0007fed0:8dad7398	t5=$800e7398
		//	lwc1		$f14, $0050(sp)		# 0007fed4:c7ae0050	
		//	lui		v0, $800e		# 0007fed8:3c02800e	v0=$800e0000
		//	bne		t5, zero, $0007ff18	# 0007fedc:15a0000e	v __0007ff18
		//	nop					# 0007fee0:00000000	
		//	lbu		v0, $73df(v0)		# 0007fee4:904273df	v0=$800e73df
		//	addiu		at, zero, $0004		# 0007fee8:24010004	at=$00000004
		//	beq		v0, at, $0007ff18	# 0007feec:1041000a	v __0007ff18
		//	addiu		at, zero, $0005		# 0007fef0:24010005	at=$00000005
		//	beq		v0, at, $0007ff18	# 0007fef4:10410008	v __0007ff18
		//	lui		at, $4248		# 0007fef8:3c014248	at=$42480000
		//	mtc1		at, $f8			# 0007fefc:44814000	
		//	lui		at, $40c0		# 0007ff00:3c0140c0	at=$40c00000
		//	mtc1		at, $f10		# 0007ff04:44815000	
		//	lui		at, $800e		# 0007ff08:3c01800e	at=$800e0000
		//	div.s		$f18, $f0, $f10		# 0007ff0c:460a0483	
		//	sub.s		$f4, $f8, $f18		# 0007ff10:46124101	
		//	swc1		$f4, $65a0(at)		# 0007ff14:e42465a0	[800e65a0]
		//__0007ff18:					# 
		//	jal		$00003824		# 0007ff18:0c000e09	^ FNC_00003824
		//	lwc1		$f12, $004c(sp)		# 0007ff1c:c7ac004c	
		N64.fnc00003824();
		//	mtc1		v0, $f6			# 0007ff20:44823000	
		//	lui		at, $800a		# 0007ff24:3c01800a	at=$800a0000
		//	(ldc1)		s2, $4f20(at)		# 0007ff28:d4324f20	
		//	cvt.s.w		$f10, $f6		# 0007ff2c:468032a0	
		//	lui		at, $40e0		# 0007ff30:3c0140e0	at=$40e00000
		//	mtc1		at, $f7			# 0007ff34:44813800	
		//	mtc1		zero, $f6		# 0007ff38:44803000	
		//	lui		v1, $8009		# 0007ff3c:3c038009	v1=$80090000
		//	addiu		v1, v1, $ddf0		# 0007ff40:2463ddf0	v1=$8008ddf0
		//	(cop1_s)	$02005221		# 0007ff44:46005221	
		//	lui		at, $43b4		# 0007ff48:3c0143b4	at=$43b40000
		//	(cop1)		$02324102		# 0007ff4c:46324102	
		//	mtc1		zero, $f18		# 0007ff50:44809000	
		//	lui		t9, $800e		# 0007ff54:3c19800e	t9=$800e0000
		//	(cop1)		$02262283		# 0007ff58:46262283	
		//	(cop1)		$02205220		# 0007ff5c:46205220	
		//	swc1		$f8, $0000(v1)		# 0007ff60:e4680000	
		//	lwc1		$f0, $0000(v1)		# 0007ff64:c4600000	
		//	(cop1_s)	$0212003c		# 0007ff68:4612003c	
		//	nop					# 0007ff6c:00000000	
		//	bc1fl		$0007ff90		# 0007ff70:45020007	v __0007ff90
		//	lui		at, $43b4		# 0007ff74:3c0143b4	at=$43b40000
		//	mtc1		at, $f4			# 0007ff78:44812000	
		//	nop					# 0007ff7c:00000000	
		//	add.s		$f6, $f0, $f4		# 0007ff80:46040180	
		//	swc1		$f6, $0000(v1)		# 0007ff84:e4660000	
		//	lwc1		$f0, $0000(v1)		# 0007ff88:c4600000	
		//	lui		at, $43b4		# 0007ff8c:3c0143b4	at=$43b40000
		//__0007ff90:					# 
		//	mtc1		at, $f10		# 0007ff90:44815000	
		//	nop					# 0007ff94:00000000	
		//	(cop1_s)	$0200503c		# 0007ff98:4600503c	
		//	nop					# 0007ff9c:00000000	
		//	bc1f		$0007ffd0		# 0007ffa0:4500000b	v __0007ffd0
		//	nop					# 0007ffa4:00000000	
		//	(cop1_s)	$0200020d		# 0007ffa8:4600020d	
		//	addiu		at, zero, $0168		# 0007ffac:24010168	at=$00000168
		//	mfc1		t7, $f8			# 0007ffb0:440f4000	
		//	nop					# 0007ffb4:00000000	
		//	div		t7, at			# 0007ffb8:01e1001a	
		//	mfhi		t8			# 0007ffbc:0000c010	
		//	mtc1		t8, $f18		# 0007ffc0:44989000	
		//	nop					# 0007ffc4:00000000	
		//	cvt.s.w		$f4, $f18		# 0007ffc8:46809120	
		//	swc1		$f4, $0000(v1)		# 0007ffcc:e4640000	
		//__0007ffd0:					# 
		//	lh		t9, $73e0(t9)		# 0007ffd0:873973e0	
		//	addiu		t3, zero, $4000		# 0007ffd4:240b4000	t3=$00004000
		//	lui		at, $800e		# 0007ffd8:3c01800e	at=$800e0000
		//	subu		t4, t3, t9		# 0007ffdc:01796023	
		//	jal		$00073a50		# 0007ffe0:0c01ce94	^ FNC_00073a50
		//	sh		t4, $6a74(at)		# 0007ffe4:a42c6a74	[800e6a74]
		fnc00073a50();
		//	lui		t5, $800a		# 0007ffe8:3c0d800a	t5=$800a0000
		//	lui		t6, $800a		# 0007ffec:3c0e800a	t6=$800a0000
		//	lw		t6, $0978(t6)		# 0007fff0:8dce0978	t6=$800a0978
		//	lw		t5, $097c(t5)		# 0007fff4:8dad097c	t5=$800a097c
		//	lui		at, $3f80		# 0007fff8:3c013f80	at=$3f800000
		//	mtc1		t6, $f8			# 0007fffc:448e4000	
		//__00080000:					# 
		//	mtc1		t5, $f6			# 00080000:448d3000	
		//__00080007:					# 
		//	mtc1		at, $f4			# 00080004:44812000	
		//	cvt.s.w		$f18, $f8		# 00080008:468044a0	
		//	lui		v1, $8006		# 0008000c:3c038006	v1=$80060000
		//	addiu		v1, v1, $bb38		# 00080010:2463bb38	v1=$8005bb38
		//	lui		a3, $3faa		# 00080014:3c073faa	a3=$3faa0000
		//	ori		a3, a3, $aaab		# 00080018:34e7aaab	a3=$3faaaaab
		//	cvt.s.w		$f10, $f6		# 0008001c:468032a0	
		//	lw		a0, $0000(v1)		# 00080020:8c640000	a0=$8005bb38
		//	swc1		$f18, $0014(sp)		# 00080024:e7b20014	
		//	addiu		a1, sp, $0056		# 00080028:27a50056	
		//	lui		a2, $4220		# 0008002c:3c064220	a2=$42200000
		//	swc1		$f4, $0018(sp)		# 00080030:e7a40018	
		//	jal		$0001e590		# 00080034:0c007964	^ FNC_0001e590
		//	swc1		$f10, $0010(sp)		# 00080038:e7aa0010	
		N64.guPerspective();
		//	lui		t2, $8006		# 0008003c:3c0a8006	t2=$80060000
		//	addiu		t2, t2, $bb2c		# 00080040:254abb2c	t2=$8005bb2c
		//	lw		v0, $0000(t2)		# 00080044:8d420000	v0=$8005bb2c
		//	lui		t8, $bc00		# 00080048:3c18bc00	t8=$bc000000
		//	ori		t8, t8, $000e		# 0008004c:3718000e	t8=$bc00000e
		//	addiu		t7, v0, $0008		# 00080050:244f0008	t7=$801cfed0
		//	sw		t7, $0000(t2)		# 00080054:ad4f0000	[8005bb2c]
		//	addiu		t3, sp, $0056		# 00080058:27ab0056	
		//	sw		t3, $0004(v0)		# 0008005c:ac4b0004	[801cfecc]
		//	sw		t8, $0000(v0)		# 00080060:ac580000	[801cfec8]
		//	lw		v0, $0000(t2)		# 00080064:8d420000	v0=$8005bb2c
		//	lui		t4, $0103		# 00080068:3c0c0103	t4=$01030000
		//	lui		v1, $8006		# 0008006c:3c038006	v1=$80060000
		//	addiu		t9, v0, $0008		# 00080070:24590008	t9=$801cfed0
		//	sw		t9, $0000(t2)		# 00080074:ad590000	[8005bb2c]
		//	ori		t4, t4, $0040		# 00080078:358c0040	t4=$01030040
		//	addiu		v1, v1, $bb38		# 0008007c:2463bb38	v1=$8005bb38
		//	sw		t4, $0000(v0)		# 00080080:ac4c0000	[801cfec8]
		//	lw		t5, $0000(v1)		# 00080084:8c6d0000	t5=$8005bb38
		//	lui		at, $1fff		# 00080088:3c011fff	at=$1fff0000
		//	ori		at, at, $ffff		# 0008008c:3421ffff	at=$1fffffff
		//	and		t6, t5, at		# 00080090:01a17024	
		//	sw		t6, $0004(v0)		# 00080094:ac4e0004	[801cfecc]
		//	lw		t7, $0000(v1)		# 00080098:8c6f0000	t7=$8005bb38
		//	lui		at, $800e		# 0008009c:3c01800e	at=$800e0000
		//	mtc1		zero, $f0		# 000800a0:44800000	
		//	addiu		a0, t7, $0040		# 000800a4:25e40040	a0=$801ed950
		//	sw		a0, $0000(v1)		# 000800a8:ac640000	[8005bb38]
		//	lwc1		$f6, $659c(at)		# 000800ac:c426659c	[800e659c]
		//	lui		at, $800e		# 000800b0:3c01800e	at=$800e0000
		//	lwc1		$f10, $65a0(at)		# 000800b4:c42a65a0	[800e65a0]
		//	lui		at, $800e		# 000800b8:3c01800e	at=$800e0000
		//	lwc1		$f8, $65a4(at)		# 000800bc:c42865a4	[800e65a4]
		//	lui		at, $3f80		# 000800c0:3c013f80	at=$3f800000
		//	mtc1		at, $f18		# 000800c4:44819000	
		//	lui		a1, $8009		# 000800c8:3c058009	a1=$80090000
		//	lui		a2, $8009		# 000800cc:3c068009	a2=$80090000
		//	lui		a3, $8009		# 000800d0:3c078009	a3=$80090000
		//	lw		a3, $ddfc(a3)		# 000800d4:8ce7ddfc	a3=$8008ddfc
		//	lw		a2, $ddf8(a2)		# 000800d8:8cc6ddf8	a2=$8008ddf8
		//	lw		a1, $ddf4(a1)		# 000800dc:8ca5ddf4	a1=$8008ddf4
		//	swc1		$f0, $001c(sp)		# 000800e0:e7a0001c	
		//FNC_000800e4:					# 
		//	swc1		$f0, $0024(sp)		# 000800e4:e7a00024	
		//	swc1		$f6, $0010(sp)		# 000800e8:e7a60010	
		//	swc1		$f10, $0014(sp)		# 000800ec:e7aa0014	
		//	swc1		$f8, $0018(sp)		# 000800f0:e7a80018	
		//	jal		$0001de68		# 000800f4:0c00779a	^ FNC_0001de68
		//	swc1		$f18, $0020(sp)		# 000800f8:e7b20020	
		N64.guLookAt();
		//	lui		v1, $8006		# 000800fc:3c038006	v1=$80060000
		//	addiu		v1, v1, $bb38		# 00080100:2463bb38	v1=$8005bb38
		//	lui		a0, $800e		# 00080104:3c04800e	a0=$800e0000
		//	addiu		a0, a0, $7350		# 00080108:24847350	a0=$800e7350
		//	jal		$00028048		# 0008010c:0c00a012	^ FNC_00028048
		//	lw		a1, $0000(v1)		# 00080110:8c650000	a1=$8005bb38
		N64.fnc00028048();
		//	lui		t2, $8006		# 00080114:3c0a8006	t2=$80060000
		//	addiu		t2, t2, $bb2c		# 00080118:254abb2c	t2=$8005bb2c
		//	lw		v0, $0000(t2)		# 0008011c:8d420000	v0=$8005bb2c
		//	lui		t9, $0101		# 00080120:3c190101	t9=$01010000
		//	lui		v1, $8006		# 00080124:3c038006	v1=$80060000
		//	addiu		t3, v0, $0008		# 00080128:244b0008	t3=$801cfed0
		//	sw		t3, $0000(t2)		# 0008012c:ad4b0000	[8005bb2c]
		//	ori		t9, t9, $0040		# 00080130:37390040	t9=$01010040
		//	addiu		v1, v1, $bb38		# 00080134:2463bb38	v1=$8005bb38
		//	sw		t9, $0000(v0)		# 00080138:ac590000	[801cfec8]
		//	lw		t4, $0000(v1)		# 0008013c:8c6c0000	t4=$8005bb38
		//__00080140:					# 
		//	lui		at, $1fff		# 00080140:3c011fff	at=$1fff0000
		//	ori		at, at, $ffff		# 00080144:3421ffff	at=$1fffffff
		//	and		t5, t4, at		# 00080148:01816824	
		//	sw		t5, $0004(v0)		# 0008014c:ac4d0004	[801cfecc]
		//	lw		t6, $0000(v1)		# 00080150:8c6e0000	t6=$8005bb38
		//	lw		ra, $002c(sp)		# 00080154:8fbf002c	
		//	addiu		sp, sp, $0058		# 00080158:27bd0058	
		//	addiu		t7, t6, $0040		# 0008015c:25cf0040	t7=$801ed950
		//	jr		ra			# 00080160:03e00008	
		//	sw		t7, $0000(v1)		# 00080164:ac6f0000	[8005bb38]
	}

	// RAM GREECE
	void fnc00080168() {
	}

	// RAM GREECE
	void fnc00080190(uint a0, uint a1, short a2, short a3, float a4) {
		//N64.fnc0001d980();
		//N64.coss();
		//N64.fnc0001d980();
		//N64.coss();
		//fnc0007c698();
		//fnc0007c698();
	}

	// RAM GREECE
	void fnc000804e0() {
	}

	// RAM GREECE
	void fnc000806f8() {
	}

	// RAM GREECE
	void fnc00080770()
	{
		//	lui		v1, $800e		# 00080770:3c03800e	v1=$800e0000
		//	addiu		v1, v1, $6a78		# 00080774:24636a78	v1=$800e6a78
		//	lui		at, $42c0		# 00080778:3c0142c0	at=$42c00000
		//	mtc1		at, $f0			# 0008077c:44810000	
		//	lwc1		$f4, $004c(v1)		# 00080780:c464004c	[800e6ac4]
		//	lui		at, $800e		# 00080784:3c01800e	at=$800e0000
		//	addiu		sp, sp, $ffe8		# 00080788:27bdffe8	
		//	sub.s		$f6, $f4, $f0		# 0008078c:46002181	
		//	sw		ra, $0014(sp)		# 00080790:afbf0014	
		//	swc1		$f6, $659c(at)		# 00080794:e426659c	[800e659c]
		//	lui		at, $4248		# 00080798:3c014248	at=$42480000
		//	mtc1		at, $f8			# 0008079c:44814000	
		//	lui		at, $800e		# 000807a0:3c01800e	at=$800e0000
		//	swc1		$f8, $65a0(at)		# 000807a4:e42865a0	[800e65a0]
		//	lwc1		$f10, $0054(v1)		# 000807a8:c46a0054	[800e6acc]
		//	lui		at, $800e		# 000807ac:3c01800e	at=$800e0000
		//	sub.s		$f16, $f10, $f0		# 000807b0:46005401	
		//	swc1		$f16, $65a4(at)		# 000807b4:e43065a4	[800e65a4]
		//	lh		a0, $000e(v1)		# 000807b8:8464000e	a0=$800e6a86
		//	addiu		a0, a0, $2000		# 000807bc:24842000	
		//	andi		t6, a0, $ffff		# 000807c0:308effff	
		//	jal		$0001d950		# 000807c4:0c007654	^ FNC_0001d950
		//	or		a0, t6, zero		# 000807c8:01c02025	
		N64.coss();
		//	mtc1		v0, $f18		# 000807cc:44829000	
		//	lui		at, $40e0		# 000807d0:3c0140e0	at=$40e00000
		//	mtc1		at, $f9			# 000807d4:44814800	
		//	cvt.s.w		$f4, $f18		# 000807d8:46809120	
		//	mtc1		zero, $f8		# 000807dc:44804000	
		//	lui		at, $800a		# 000807e0:3c01800a	at=$800a0000
		//	(ldc1)		s0, $4f28(at)		# 000807e4:d4304f28	
		//	lui		v1, $800e		# 000807e8:3c03800e	v1=$800e0000
		//	addiu		v1, v1, $6a78		# 000807ec:24636a78	v1=$800e6a78
		//	(cop1_s)	$020021a1		# 000807f0:460021a1	
		//	lwc1		$f4, $004c(v1)		# 000807f4:c464004c	[800e6ac4]
		//	(cop1)		$02283283		# 000807f8:46283283	
		//	lui		at, $4058		# 000807fc:3c014058	at=$40580000
		//	(cop1_s)	$020021a1		# 00080800:460021a1	
		//	(cop1)		$02305482		# 00080804:46305482	
		//	mtc1		zero, $f10		# 00080808:44805000	
		//	mtc1		at, $f11		# 0008080c:44815800	
		//	lui		at, $8009		# 00080810:3c018009	at=$80090000
		//	(cop1)		$02323201		# 00080814:46323201	
		//	(cop1)		$022a4401		# 00080818:462a4401	
		//	(cop1)		$02208120		# 0008081c:46208120	
		//	swc1		$f4, $ddf4(at)		# 00080820:e424ddf4	
		//	lui		at, $4296		# 00080824:3c014296	at=$42960000
		//	mtc1		at, $f6			# 00080828:44813000	
		//	lui		at, $8009		# 0008082c:3c018009	at=$80090000
		//	swc1		$f6, $ddf8(at)		# 00080830:e426ddf8	[8008ddf8]
		//	lh		a0, $000e(v1)		# 00080834:8464000e	
		//	addiu		a0, a0, $2000		# 00080838:24842000	
		//	andi		t7, a0, $ffff		# 0008083c:308fffff	
		//	jal		$0001d980		# 00080840:0c007660	^ FNC_0001d980
		//	or		a0, t7, zero		# 00080844:01e02025	
		N64.sins();
		//	mtc1		v0, $f18		# 00080848:44829000	
		//	lui		at, $40e0		# 0008084c:3c0140e0	at=$40e00000
		//	mtc1		at, $f17		# 00080850:44818800	
		//	cvt.s.w		$f8, $f18		# 00080854:46809220	
		//	mtc1		zero, $f16		# 00080858:44808000	
		//	lui		at, $800a		# 0008085c:3c01800a	at=$800a0000
		//	(ldc1)		a2, $4f30(at)		# 00080860:d4264f30	
		//	lui		v1, $800e		# 00080864:3c03800e	v1=$800e0000
		//	addiu		v1, v1, $6a78		# 00080868:24636a78	v1=$800e6a78
		//	(cop1_s)	$020042a1		# 0008086c:460042a1	
		//	lwc1		$f8, $0054(v1)		# 00080870:c4680054	[800e6acc]
		//	(cop1)		$02305103		# 00080874:46305103	
		//	lui		at, $4058		# 00080878:3c014058	at=$40580000
		//	lw		ra, $0014(sp)		# 0008087c:8fbf0014	
		//	addiu		sp, sp, $0018		# 00080880:27bd0018	
		//	(cop1_s)	$020042a1		# 00080884:460042a1	
		//	(cop1)		$02262482		# 00080888:46262482	
		//	mtc1		zero, $f4		# 0008088c:44802000	
		//	mtc1		at, $f5			# 00080890:44812800	
		//	lui		at, $8009		# 00080894:3c018009	at=$80090000
		//	(cop1)		$02325401		# 00080898:46325401	
		//	(cop1)		$02248181		# 0008089c:46248181	
		//	(cop1)		$02203220		# 000808a0:46203220	
		//	jr		ra			# 000808a4:03e00008	
		//	swc1		$f8, $ddfc(at)		# 000808a8:e428ddfc	
	}

	void fnc000808ac ()
	{
		//	addiu		t6, zero, $0002		# 000808ac:240e0002	t6=$00000002
		//	lui		at, $800e		# 000808b0:3c01800e	at=$800e0000
		//	jr		ra			# 000808b4:03e00008	
		//	sb		t6, $73df(at)		# 000808b8:a02e73df	[800e73df]
		x800e73df = 2;
	}

	void fnc000808bc ()
	{
		//	lui		t6, $8004		# 000808bc:3c0e8004	t6=$80040000
		//	lbu		t6, $7f80(t6)		# 000808c0:91ce7f80	t6=$80047f80
		//	lui		at, $800e		# 000808c4:3c01800e	at=$800e0000
		//	jr		ra			# 000808c8:03e00008	
		//	sb		t6, $73df(at)		# 000808cc:a02e73df	[800e73df]
		x800e73df = x80047f80;
	}

	// RAM GREECE
	void fnc000808d0() {
		//N64.fnc00003680();
		//N64.fnc0001cc6c("PlayerInside.RealXpos=%f\n");
		//fnc00080190();
		//fnc00080190();
	}

	// RAM GREECE
	/// Switches between camera views with C_UP
	void fnc00080a38() {
		//N64.fnc0001d940();
		//N64.ButtonIsNewlyPressed();
		//N64.fnc00003824();
		//N64.fnc00003680();
		//fnc00080e28();
		//fnc0008247c();
		//fnc00080190();
		//fnc00080fd8();
	}

	// RAM GREECE
	void fnc00080da8() {
	}

	// RAM GREECE
	void fnc00080e28() {
		//fnc000813b4();
		//fnc00080da8();
	}

	// RAM GREECE
	void fnc00080fd8() {
		//N64.fnc0001d940();
		//N64.fnc00003824();
		//N64.fnc0001d980();
		//N64.coss();
		//fnc0007b65c();
	}

	// RAM GREECE
	void fnc000811dc() {
	}

	// RAM GREECE
	void fnc000812b4() {
	}

	// RAM GREECE
	void fnc000812c4() {
	}

	// RAM GREECE
	void fnc000812e0() {
	}

	// RAM GREECE
	void fnc000813b4() {
		//fnc00080da8();
		//fnc000811dc();
		//fnc000811dc();
	}

	// RAM 00081764
	void DebugManualCameraControl()
	{
		//	lui		v0, $8004		# 00081764:3c028004	v0=$80040000
		//	lhu		v0, $758e(v0)		# 00081768:9442758e	v0=$8004758e
		//	addiu		sp, sp, $ffc0		# 0008176c:27bdffc0	
		//	sw		ra, $003c(sp)		# 00081770:afbf003c	
		//	andi		t6, v0, $2000		# 00081774:304e2000	
		//	beq		t6, zero, $000817cc	# 00081778:11c00014	v __000817cc
		//	sw		s0, $0038(sp)		# 0008177c:afb00038	
		if ((controllerTwoButtonState & N64.Buttons.Z) != 0)
		{
			//	andi		t7, v0, $0800		# 00081780:304f0800	
			//	beq		t7, zero, $000817a8	# 00081784:11e00008	v __000817a8
			//	andi		t8, v0, $0400		# 00081788:30580400	
			if ((controllerTwoButtonState & N64.Buttons.D_UP) != 0)
			{
				//	lui		s0, $800e		# 0008178c:3c10800e	s0=$800e0000
				//	addiu		s0, s0, $73f0		# 00081790:261073f0	s0=$800e73f0
				//	lui		at, $3f80		# 00081794:3c013f80	at=$3f800000
				//	mtc1		at, $f0			# 00081798:44810000	
				//	lwc1		$f4, $0008(s0)		# 0008179c:c6040008	[800e73f8]
				//	add.s		$f6, $f4, $f0		# 000817a0:46002180	
				//	swc1		$f6, $0008(s0)		# 000817a4:e6060008	[800e73f8]
				x800e73f8 += 1f;
			}
			//__000817a8:					# 
			//	lui		at, $3f80		# 000817a8:3c013f80	at=$3f800000
			//	mtc1		at, $f0			# 000817ac:44810000	
			//	lui		s0, $800e		# 000817b0:3c10800e	s0=$800e0000
			//	beq		t8, zero, $00081814	# 000817b4:13000017	v __00081814
			//	addiu		s0, s0, $73f0		# 000817b8:261073f0	s0=$800e73f0
			if ((controllerTwoButtonState & N64.Buttons.D_DOWN) != 0)
			{
				//	lwc1		$f8, $0008(s0)		# 000817bc:c6080008	[800e73f8]
				//	sub.s		$f10, $f8, $f0		# 000817c0:46004281	
				//	beq		zero, zero, $00081814	# 000817c4:10000013	v __00081814
				//	swc1		$f10, $0008(s0)		# 000817c8:e60a0008	[800e73f8]
				x800e73f8 -= 1f;
			}
		}
		else
		{
			//__000817cc:					# 
			//	andi		t9, v0, $0800		# 000817cc:30590800	
			//	beq		t9, zero, $000817f4	# 000817d0:13200008	v __000817f4
			//	andi		t0, v0, $0400		# 000817d4:30480400	
			if ((controllerTwoButtonState & N64.Buttons.D_UP) != 0)
			{
				//	lui		s0, $800e		# 000817d8:3c10800e	s0=$800e0000
				//	addiu		s0, s0, $73f0		# 000817dc:261073f0	s0=$800e73f0
				//	lui		at, $3f80		# 000817e0:3c013f80	at=$3f800000
				//	mtc1		at, $f0			# 000817e4:44810000	
				//	lwc1		$f16, $0004(s0)		# 000817e8:c6100004	[800e73f4]
				//	add.s		$f18, $f16, $f0		# 000817ec:46008480	
				//	swc1		$f18, $0004(s0)		# 000817f0:e6120004	[800e73f4]
				x800e73f4 += 1f;
			}
			//__000817f4:					# 
			//	lui		at, $3f80		# 000817f4:3c013f80	at=$3f800000
			//	mtc1		at, $f0			# 000817f8:44810000	
			//	lui		s0, $800e		# 000817fc:3c10800e	s0=$800e0000
			//	beq		t0, zero, $00081814	# 00081800:11000004	v __00081814
			//	addiu		s0, s0, $73f0		# 00081804:261073f0	s0=$800e73f0
			if ((controllerTwoButtonState & N64.Buttons.D_DOWN) != 0)
			{
				//	lwc1		$f4, $0004(s0)		# 00081808:c6040004	[800e73f4]
				//	sub.s		$f6, $f4, $f0		# 0008180c:46002181	
				//	swc1		$f6, $0004(s0)		# 00081810:e6060004	[800e73f4]
				x800e73f4 -= 1f;
			}
		}
		//__00081814:					# 
		//	andi		t1, v0, $0200		# 00081814:30490200	
		//	beq		t1, zero, $0008182c	# 00081818:11200004	v __0008182c
		//	andi		t2, v0, $0100		# 0008181c:304a0100	
		if ((controllerTwoButtonState & N64.Buttons.D_LEFT) != 0)
		{
			//	lwc1		$f8, $0000(s0)		# 00081820:c6080000	[800e73f0]
			//	add.s		$f10, $f8, $f0		# 00081824:46004280	
			//	swc1		$f10, $0000(s0)		# 00081828:e60a0000	[800e73f0]
			x800e73f0 += 1f;
		}
		//__0008182c:					# 
		//	beq		t2, zero, $00081840	# 0008182c:11400004	v __00081840
		//	andi		t3, v0, $0002		# 00081830:304b0002	
		if ((controllerTwoButtonState & N64.Buttons.D_RIGHT) != 0)
		{
			//	lwc1		$f16, $0000(s0)		# 00081834:c6100000	[800e73f0]
			//	sub.s		$f18, $f16, $f0		# 00081838:46008481	
			//	swc1		$f18, $0000(s0)		# 0008183c:e6120000	[800e73f0]
			x800e73f0 -= 1f;
		}
		//__00081840:					# 
		//	beq		t3, zero, $0008185c	# 00081840:11600006	v __0008185c
		//	andi		t6, v0, $0001		# 00081844:304e0001	
		if ((controllerTwoButtonState & N64.Buttons.C_LEFT) != 0)
		{
			//	lui		a3, $800e		# 00081848:3c07800e	a3=$800e0000
			//	addiu		a3, a3, $73e0		# 0008184c:24e773e0	a3=$800e73e0
			//	lh		t4, $0000(a3)		# 00081850:84ec0000	t4=$800e73e0
			//	addiu		t5, t4, $ff4a		# 00081854:258dff4a	
			//	sh		t5, $0000(a3)		# 00081858:a4ed0000	[800e73e0]
			indoorCameraYaw -= 0xb6; 
		}
		//__0008185c:					# 
		//	lui		a3, $800e		# 0008185c:3c07800e	a3=$800e0000
		//	beq		t6, zero, $00081874	# 00081860:11c00004	v __00081874
		//	addiu		a3, a3, $73e0		# 00081864:24e773e0	a3=$800e73e0
		if ((controllerTwoButtonState & N64.Buttons.C_RIGHT) != 0)
		{
			//	lh		t7, $0000(a3)		# 00081868:84ef0000	t7=$800e73e0
			//	addiu		t8, t7, $00b6		# 0008186c:25f800b6	
			//	sh		t8, $0000(a3)		# 00081870:a4f80000	[800e73e0]
			indoorCameraYaw += 0xb6; 
		}
		//__00081874:					# 
		//	andi		t9, v0, $0008		# 00081874:30590008	
		//	beq		t9, zero, $00081894	# 00081878:13200006	v __00081894
		//	andi		t2, v0, $0004		# 0008187c:304a0004	
		if ((controllerTwoButtonState & N64.Buttons.C_UP) != 0)
		{
			//	lui		a2, $800e		# 00081880:3c06800e	a2=$800e0000
			//	addiu		a2, a2, $73e4		# 00081884:24c673e4	a2=$800e73e4
			//	lh		t0, $0000(a2)		# 00081888:84c80000	t0=$800e73e4
			//	addiu		t1, t0, $00b6		# 0008188c:250900b6	
			//	sh		t1, $0000(a2)		# 00081890:a4c90000	[800e73e4]
			indoorCameraPitch += 0xb6;
		}
		//__00081894:					# 
		//	lui		a2, $800e		# 00081894:3c06800e	a2=$800e0000
		//	beq		t2, zero, $000818ac	# 00081898:11400004	v __000818ac
		//	addiu		a2, a2, $73e4		# 0008189c:24c673e4	a2=$800e73e4
		if ((controllerTwoButtonState & N64.Buttons.C_DOWN) != 0)
		{
			//	lh		t3, $0000(a2)		# 000818a0:84cb0000	t3=$800e73e4
			//	addiu		t4, t3, $ff4a		# 000818a4:256cff4a	
			//	sh		t4, $0000(a2)		# 000818a8:a4cc0000	[800e73e4]
			indoorCameraPitch -= 0xb6;
		}
		//__000818ac:					# 
		//	andi		t5, v0, $8000		# 000818ac:304d8000	
		//	beq		t5, zero, $000818cc	# 000818b0:11a00006	v __000818cc
		//	andi		t6, v0, $4000		# 000818b4:304e4000	
		if ((controllerTwoButtonState & N64.Buttons.A) != 0)
		{
			//	lui		v1, $800e		# 000818b8:3c03800e	v1=$800e0000
			//	addiu		v1, v1, $73e8		# 000818bc:246373e8	v1=$800e73e8
			//	lwc1		$f4, $0000(v1)		# 000818c0:c4640000	[800e73e8]
			//	add.s		$f6, $f4, $f0		# 000818c4:46002180	
			//	swc1		$f6, $0000(v1)		# 000818c8:e4660000	[800e73e8]
			x800e73e8 += 1f;
		}
		//__000818cc:					# 
		//	lui		v1, $800e		# 000818cc:3c03800e	v1=$800e0000
		//	beq		t6, zero, $000818e4	# 000818d0:11c00004	v __000818e4
		//	addiu		v1, v1, $73e8		# 000818d4:246373e8	v1=$800e73e8
		if ((controllerTwoButtonState & N64.Buttons.B) != 0)
		{
			//	lwc1		$f8, $0000(v1)		# 000818d8:c4680000	[800e73e8]
			//	sub.s		$f10, $f8, $f0		# 000818dc:46004281	
			//	swc1		$f10, $0000(v1)		# 000818e0:e46a0000	[800e73e8]
			x800e73e8 -= 1f;
		}
		//__000818e4:					# 
		//	addiu		a0, zero, $0020		# 000818e4:24040020	a0=$00000020
		//	jal		$000033d4		# 000818e8:0c000cf5	^ FNC_000033d4
		//	addiu		a1, zero, $0001		# 000818ec:24050001	a1=$00000001
		N64.fnc000033d4(0x20, 1);
		//	lui		t7, $8004		# 000818f0:3c0f8004	t7=$80040000
		//	lhu		t7, $758e(t7)		# 000818f4:95ef758e	t7=$8004758e
		//	andi		t8, t7, $0020		# 000818f8:31f80020	
		//	beq		t8, zero, $00081980	# 000818fc:13000020	v __00081980
		//	lui		a0, $800a		# 00081900:3c04800a	a0=$800a0000
		if ((controllerTwoButtonState & N64.Buttons.L) != 0)
		{
			//	jal		$0001cc6c		# 00081904:0c00731b	^ FNC_0001cc6c
			//	addiu		a0, a0, $4ddc		# 00081908:24844ddc	a0=$800a4ddc
			N64.fnc0001cc6c("..");
			//	lui		a0, $800a		# 0008190c:3c04800a	a0=$800a0000
			//	jal		$0001cc6c		# 00081910:0c00731b	^ FNC_0001cc6c
			//	addiu		a0, a0, $4de0		# 00081914:24844de0	a0="lookAt, cameraYaw, cameraPitch, cameraViewDistance\n"
			N64.fnc0001cc6c("lookAt, cameraYaw, cameraPitch, cameraViewDistance\n");
			//	lwc1		$f16, $0000(s0)		# 00081918:c6100000	
			//	lui		at, $800e		# 0008191c:3c01800e	at=$800e0000
			//	lwc1		$f4, $0004(s0)		# 00081920:c6040004	
			//	(cop1_s)	$020084a1		# 00081924:460084a1	
			//	lwc1		$f16, $73e8(at)		# 00081928:c43073e8	[800e73e8]
			//	lwc1		$f8, $0008(s0)		# 0008192c:c6080008	
			//	lui		t9, $800e		# 00081930:3c19800e	t9=$800e0000
			//	lui		t0, $800e		# 00081934:3c08800e	t0=$800e0000
			//	lh		t0, $73e4(t0)		# 00081938:850873e4	t0=$800e73e4
			//	lh		t9, $73e0(t9)		# 0008193c:873973e0	t9=$800e73e0
			//	mfc1		a3, $f18		# 00081940:44079000	
			//	mfc1		a2, $f19		# 00081944:44069800	
			//	(cop1_s)	$020021a1		# 00081948:460021a1	
			//	(cop1_s)	$020084a1		# 0008194c:460084a1	
			//	(cop1_s)	$020042a1		# 00081950:460042a1	
			//	lui		a0, $800a		# 00081954:3c04800a	a0=$800a0000
			//	addiu		a0, a0, $4e14		# 00081958:24844e14	a0="%f, %f, %f, %d, %d, %f,\n"
			//	(sdc1)		t2, $0018(sp)		# 0008195c:f7aa0018	
			//	(sdc1)		s2, $0028(sp)		# 00081960:f7b20028	
			//	(sdc1)		a2, $0010(sp)		# 00081964:f7a60010	
			//	sw		t0, $0024(sp)		# 00081968:afa80024	
			//	jal		$0001cc6c		# 0008196c:0c00731b	^ FNC_0001cc6c
			//	sw		t9, $0020(sp)		# 00081970:afb90020	
			N64.fnc0001cc6c("%f, %f, %f, %d, %d, %f,\n");
			//	lui		a0, $800a		# 00081974:3c04800a	a0=$800a0000
			//	jal		$0001cc6c		# 00081978:0c00731b	^ FNC_0001cc6c
			//	addiu		a0, a0, $4e30		# 0008197c:24844e30	a0=$800a4e30
			N64.fnc0001cc6c("..");
		}
		//__00081980:					# 
		//	lui		at, $800e		# 00081980:3c01800e	at=$800e0000
		//	lwc1		$f4, $73e8(at)		# 00081984:c42473e8	[800e73e8]
		//	lui		a0, $800e		# 00081988:3c04800e	a0=$800e0000
		//	lui		a2, $800e		# 0008198c:3c06800e	a2=$800e0000
		//	lui		a3, $800e		# 00081990:3c07800e	a3=$800e0000
		//	addiu		a0, a0, $7410		# 00081994:24847410	a0=$800e7410
		//	lh		a3, $73e4(a3)		# 00081998:84e773e4	a3=$800e73e4
		//	lh		a2, $73e0(a2)		# 0008199c:84c673e0	a2=$800e73e0
		//	or		a1, s0, zero		# 000819a0:02002825	
		//	jal		$00080190		# 000819a4:0c020064	^ FNC_00080190
		//	swc1		$f4, $0010(sp)		# 000819a8:e7a40010	
		fnc00080190(0x800e7410, 0x800e73f0, indoorCameraYaw, indoorCameraPitch, x800e73e8);
		//	lui		a0, $800e		# 000819ac:3c04800e	a0=$800e0000
		//	addiu		a0, a0, $7410		# 000819b0:24847410	a0=$800e7410
		//	lwc1		$f6, $0000(a0)		# 000819b4:c4860000	[800e7410]
		//	lui		at, $8009		# 000819b8:3c018009	at=$80090000
		//	lw		ra, $003c(sp)		# 000819bc:8fbf003c	
		//	swc1		$f6, $ddf4(at)		# 000819c0:e426ddf4	[8008ddf4]
		x8008ddf4 = x800e7410;
		//	lui		at, $4000		# 000819c4:3c014000	at=$40000000
		//	mtc1		at, $f10		# 000819c8:44815000	
		//	lwc1		$f8, $0004(a0)		# 000819cc:c4880004	[800e7414]
		//	lui		at, $8009		# 000819d0:3c018009	at=$80090000
		//	mul.s		$f16, $f8, $f10		# 000819d4:460a4402	
		//	swc1		$f16, $ddf8(at)		# 000819d8:e430ddf8	[8008ddf8]
		x8008ddf8 = x800e7414 * 2;
		//	lwc1		$f18, $0008(a0)		# 000819dc:c4920008	[800e7418]
		//	lui		at, $8009		# 000819e0:3c018009	at=$80090000
		//	swc1		$f18, $ddfc(at)		# 000819e4:e432ddfc	[8008ddfc]
		x8008ddfc = x800e7418;
		//	lwc1		$f4, $0000(s0)		# 000819e8:c6040000	
		//	lui		at, $800e		# 000819ec:3c01800e	at=$800e0000
		//	swc1		$f4, $659c(at)		# 000819f0:e424659c	[800e659c]
		x800e659c = x800e73f0;
		//	lwc1		$f6, $0004(s0)		# 000819f4:c6060004	
		//	lui		at, $800e		# 000819f8:3c01800e	at=$800e0000
		//	swc1		$f6, $65a0(at)		# 000819fc:e42665a0	[800e65a0]
		x800e65a0 = x800e73f4;
		//	lwc1		$f8, $0008(s0)		# 00081a00:c6080008	
		//	lui		at, $800e		# 00081a04:3c01800e	at=$800e0000
		//	lw		s0, $0038(sp)		# 00081a08:8fb00038	
		//	addiu		sp, sp, $0040		# 00081a0c:27bd0040	
		//	jr		ra			# 00081a10:03e00008	
		//	swc1		$f8, $65a4(at)		# 00081a14:e42865a4	[800e65a4]
		return;
	}

	// RAM GREECE
	void fnc00081a18() {
	}

	// RAM GREECE
	void fnc00081a24() {
	}

	// RAM GREECE
	void fnc00081aa8() {
		//fnc00080190();
	}

	// RAM GREECE
	void fnc00081b58() {
		//fnc00080190();
	}

	// RAM GREECE
	void fnc00081e08() {
	}

	// RAM GREECE
	void fnc00081e90() {
	}

	// RAM GREECE
	void fnc00081f98() {
		//fnc000811dc();
		//fnc000811dc();
		//fnc000811dc();
		//fnc000811dc();
		//N64.fnc0001cc6c("--MAP\n");
		//N64.fnc0001cc6c("%d ");
		//N64.fnc0001cc6c(".");
	}

	// RAM GREECE
	void fnc0008247c() {
		//fnc00080da8();
		//fnc0007b65c();
		//N64.fnc0001cc6c("Camera Collision Occured x: %d z: %d\n");
		//N64.fnc0001cc6c("Left Face Hit\n");
		//N64.fnc0001cc6c("Right Face Hit\n");
		//N64.fnc0001cc6c("Front Face Hit\n");
		//N64.fnc0001cc6c("Back Face Hit\n");
		//N64.fnc0001cc6c("ERROR: NO FACES HIT\n");
		//fnc0007c698();
		//N64.fnc0001cc6c("CAMERA IS OUTSIDE ROOM,  RESETTING YAW inWallYaw=%d, cameraYaw=%d\n");
	}

	// RAM GREECE
	void fnc00082aa0() {
		//N64.fnc00017aac();
	}

	// RAM GREECE
	void fnc00082b04() {
	}

	// RAM GREECE
	void fnc00082b50() {
		//N64.fnc00017b78();
		//N64.fnc00018a58();
		//N64.fnc00018aec();
		//N64.fnc00018aec();
		//N64.fnc00018aa0();
		//N64.fnc00017ca4();
		//N64.fnc00017b78();
		//fnc0007ae40();
	}

	// RAM GREECE
	void fnc00082e70() {
	}

	// RAM GREECE
	void fnc00082f04() {
	}

	// RAM GREECE
	void fnc00082f74() {
	}

	// RAM GREECE
	void fnc00082f9c() {
	}

	// RAM GREECE
	void fnc00082fc4() {
		//fnc00082f9c();
		//N64.fnc0001d940();
	}

	// RAM GREECE
	void fnc00083014() {
		//fnc00082fc4();
		//N64.fnc0001cc6c("ieNormVecF3()  {0,0,0} -> {0,0,0}\n");
		//fnc00082f74();
	}

	// RAM GREECE
	void fnc00083090() {
	}

	// RAM GREECE
	void fnc000830c0() {
	}

	// RAM GREECE
	void fnc000830f4() {
	}

	// RAM GREECE
	void fnc0008311c() {
		//fnc00082e70();
		//fnc00082e70();
		//fnc00082f04();
		//fnc00083014();
	}

	// RAM GREECE
	void fnc00083224() {
		//N64.fnc0001cc6c("WARNING : Out of space to create a new special effect of type %d.\n");
	}

	// RAM GREECE
	void fnc00083300() {
		//N64.fnc0001cc6c("EFFECTS WARNING : Call to free up an effect which does not exist\n");
	}

	// RAM GREECE
	void fnc00083390() {
		//N64.fnc0001cc6c("WARNING - New special effect unit cannot be allocated - out of space.\n");
	}

	// RAM GREECE
	void fnc000834cc() {
		//fnc00083390();
		//fnc00083390();
		//fnc000835f0();
		//fnc00083390();
		//fnc000835f0();
		//fnc000835f0();
	}

	// RAM GREECE
	void fnc00083584() {
		//fnc00083390();
		//fnc00083390();
		//fnc000835f0();
	}

	// RAM GREECE
	void fnc000835f0() {
		//N64.fnc0001cc6c("UNIT POOL CRITICAL ERROR - Call to free unused unit %d from effect %d\n");
		//N64.fnc0001cc6c("ERROR : Tried to kill unit from effect which has no units.\n");
		//N64.fnc0001cc6c("ERROR : Unit list inconsistency occurred with 2 units left.\n");
	}

	// RAM GREECE
	void fnc00083814() {
		//fnc000835f0();
		//fnc000835f0();
		//fnc000835f0();
		//N64.fnc0001cc6c("EFFECTS WARNING : Call to free up invalid triple effect unit.\n");
	}

	// RAM GREECE
	void fnc00083924() {
		//fnc000835f0();
		//fnc000835f0();
		//N64.fnc0001cc6c("EFFECTS WARNING : Call to free up invalid double effect unit.\n");
	}

	// RAM GREECE
	void fnc000839b8() {
		//fnc000835f0();
	}

	// RAM GREECE
	void fnc00083a20() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00083014();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00083f08() {
		//fnc00083224();
		//fnc00083390();
		//N64.fnc0001cc6c("EFFECTS WARNING : Failed to create sparks system - cannot allocate any units\n");
		//fnc00083300();
		//fnc00083014();
		//N64.fnc0001cc6c("SPECIAL FX WARNING : Call to create particle system with no sparks : 1 created\n");
		//fnc00083a20();
	}

	// RAM GREECE
	void fnc000840f0() {
		//fnc00083224();
		//fnc00083390();
		//N64.fnc0001cc6c("EFFECTS WARNING : Failed to create spark ");
		//fnc00083300();
		//N64.fnc0001cc6c("SPECIAL FX WARNING : Call to create particle system with no sparks : 1 created\n");
		//fnc00083a20();
	}

	// RAM GREECE
	void fnc00084258() {
		//fnc000839b8();
		//fnc00083300();
		//fnc000839b8();
		//fnc00083300();
		//fnc000835f0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00084628() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00084980() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00084c18() {
		//fnc00083224();
	}

	// RAM GREECE
	void fnc00084c68() {
		//fnc00083224();
		//fnc00083584();
		//N64.fnc0001cc6c("EFFECTS WARNING : Cannot start fire effect - there are no units left\n");
		//fnc00083300();
		//fnc00084c18();
	}

	// RAM GREECE
	void fnc00084eec() {
		//fnc00083584();
	}

	// RAM GREECE
	void fnc0008506c() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00084eec();
	}

	// RAM GREECE
	void fnc000852b8() {
		//fnc00083390();
		//N64.fnc000038e0();
		//fnc00083014();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00083014();
	}

	// RAM GREECE
	void fnc0008568c() {
		//fnc00083390();
	}

	// RAM GREECE
	void fnc0008574c() {
		//fnc00083224();
		//fnc00083584();
		//N64.fnc0001cc6c("INSIDE EFFECTS WARNING : Spurt effect not created - could not allocated any units\n");
		//fnc00083300();
	}

	// RAM GREECE
	void fnc000858f4() {
		//fnc0008574c();
	}

	// RAM GREECE
	void fnc00085984() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00083f08();
	}

	// RAM GREECE
	void fnc00085cb4() {
		//N64.fnc000038e0();
		//fnc00085984();
	}

	// RAM GREECE
	void fnc00085d40() {
		//fnc000839b8();
		//fnc00083300();
		//fnc000835f0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00085f28() {
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00084980();
		//N64.fnc000038e0();
		//fnc00084628();
		//fnc000839b8();
		//fnc00083300();
		//fnc000835f0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00086550() {
		//fnc000835f0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00086728() {
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc0008688c() {
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00086a34() {
		//fnc000835f0();
	}

	// RAM GREECE
	void fnc00086b34() {
		//fnc0008568c();
		//fnc000839b8();
		//fnc00083300();
		//fnc000835f0();
		//N64.fnc000038e0();
		//fnc000852b8();
	}

	// RAM GREECE
	void fnc00086d88() {
		//fnc00085f28();
		//fnc00085d40();
		//fnc00084258();
		//fnc00086550();
		//fnc00086728();
		//fnc0008688c();
		//fnc00086a34();
		//fnc00086b34();
		//fnc00089834();
	}

	// RAM GREECE
	void fnc00086e90() {
		//fnc000839b8();
		//fnc00083300();
	}

	// RAM GREECE
	void fnc00086f24() {
		//fnc00083924();
	}

	// RAM GREECE
	void fnc00086f58() {
		//fnc00086f24();
		//fnc000835f0();
	}

	// RAM GREECE
	void fnc00086fc4() {
	}

	// RAM GREECE
	void fnc00087a40() {
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc00087cb8() {
		//fnc00089148();
	}

	// RAM GREECE
	void fnc00087e3c() {
		//fnc00083014();
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc000881c0() {
		//fnc00083014();
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc00088654() {
	}

	// RAM GREECE
	void fnc00088b9c() {
		//fnc00089e54();
	}

	// RAM GREECE
	void fnc00088dfc() {
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc00089148() {
	}

	// RAM GREECE
	void fnc00089408() {
		//fnc00083390();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc00089648() {
		//fnc00083224();
		//fnc00083390();
		//N64.fnc0001cc6c("EFFECTS WARNING: Failed to create a jet stream - could not allocate any units\n");
		//fnc00083300();
	}

	// RAM GREECE
	void fnc0008972c() {
	}

	// RAM GREECE
	void fnc00089794() {
		//fnc000839b8();
		//fnc00083300();
	}

	// RAM GREECE
	void fnc00089834() {
		//fnc000839b8();
		//fnc00083300();
		//fnc000835f0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc00089408();
	}

	// RAM GREECE
	void fnc00089bcc() {
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc00089e54() {
	}

	// RAM GREECE
	void fnc0008a1d8() {
	}

	// RAM GREECE
	void fnc0008a59c() {
	}

	// RAM GREECE
	void fnc0008a5e4() {
		//fnc0008b058();
	}

	// RAM GREECE
	void fnc0008a704() {
		//fnc0008a1d8();
		//fnc00089e54();
		//N64.fnc0001cc6c("Call to draw generic flat effect with unknown render type.\n");
	}

	// RAM GREECE
	void fnc0008ad40() {
		//N64.fnc000038e0();
	}

	// RAM GREECE
	void fnc0008af08() {
	}

	// RAM GREECE
	void fnc0008af5c() {
	}

	// RAM GREECE
	void fnc0008af94() {
	}

	// RAM GREECE
	void fnc0008afd0() {
	}

	// RAM GREECE
	void fnc0008b020() {
	}

	// RAM GREECE
	void fnc0008b058() {
	}

	// RAM GREECE
	void fnc0008b0ac() {
		fnc0008a59c();
	}

	// RAM GREECE
	void fnc0008b1a8() {
		//fnc00088b9c();
		//fnc0008a704();
		//fnc00086fc4();
		//fnc00087a40();
		//fnc00087cb8();
		//fnc00087e3c();
		//fnc000881c0();
		//fnc00088654();
		//fnc00088dfc();
		//fnc00089bcc();
		//N64.fnc0001cc6c("INSIDE FX WARNING : Call to draw an effect of unknown type %d.\n");
		//fnc0008b594();
	}

	// RAM GREECE
	void fnc0008b474() {
		//fnc0008311c();
		//fnc00086d88();
		//fnc0008a5e4();
	}

	// RAM GREECE
	void fnc0008b53c() {
	}

	// RAM GREECE
	void fnc0008b594() {
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//N64.fnc000038e0();
		//fnc0008a1d8();
		//fnc0008a1d8();
	}

	// RAM GREECE
	void fnc0008baa0() {
	}

	// RAM GREECE
	void fnc0008bafc() {
	}

	// RAM GREECE
	void fnc0008bb14() {
	}

	// RAM GREECE
	void fnc0008bb2c() {
	}

	// RAM GREECE
	void fnc0008bb3c() {
	}

	// RAM GREECE
	void fnc0008bb4c() {
	}

	// RAM GREECE
	void fnc0008bb5c() {
	}

	// RAM GREECE
	void fnc0008bb68() {
	}

	// RAM GREECE
	void fnc0008bd18() {
		//N64.fnc00004498();
		//N64.fnc000039d0();
		//N64.fnc000092b8();
	}

	// RAM GREECE
	void fnc0008c8a4() {
		//N64.fnc0001db44();
		//N64.fnc000039d0();
		//fnc0008bd18();
		//fnc0008bd18();
		//fnc0008bd18();
		//drawText();
		//N64.fnc000092b8();
	}

	// RAM GREECE
	void fnc0008cf2c() {
		//N64.fnc000153d8();
		//N64.fnc000153d8();
		//N64.fnc000153d8();
		//N64.fnc000153d8();
		//N64.fnc0001a54c();
		//N64.fnc0001a54c();
		//N64.fnc0001a54c();
		//N64.fnc0001a54c();
		//N64.fnc00013810();
		//N64.ButtonIsNewlyPressed();
		//N64.fnc000153d8();
		//N64.fnc0001a54c();
		//N64.fnc00006dac();
	}

	// RAM GREECE
	/// The second button check brings up the pause menu
	void fnc0008d900() {
		//N64.fnc0001a130();
		//N64.ButtonIsNewlyPressed();
		//N64.fnc00017b78();
		//fnc0008bafc();
		//fnc0008bb4c();
		//fnc0008bb5c();
		//fnc0008bafc();
		//fnc0008bb14();
		//N64.fnc0001f2e0();
		//fnc0008c8a4();
		//fnc0008cf2c();
		//N64.ButtonIsNewlyPressed();
		//N64.fnc000153d8();
		//N64.fnc0001a828();
	}

	// RAM GREECE
	void fnc0008dc44() {
		//N64.fnc0001a598();
		//N64.fnc0001a598();
		//N64.fnc0001a598();
	}

	// RAM GREECE
	void fnc0008dcf4() {
		//N64.fnc0001a598();
		//N64.fnc0001a598();
		//N64.fnc0001a598();
	}

	// RAM GREECE
	void fnc0008ddc0() {
	}
}
